<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0420.1112                               -->
<workbook original-version='18.1' source-build='2021.1.1 (20211.21.0420.1112)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='deliveries.csv (Multiple Connections)' inline='true' name='federated.16cief70084kxo1amh85p1r5lc5s' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='deliveries' name='textscan.09e02tz1b1981p13qduh51ibdgsb'>
            <connection class='textscan' directory='C:/Users/ITI Aundh 4/Downloads/The Spark Foundation Tasks/Indian Premier League' filename='deliveries.csv' password='' server='' />
          </named-connection>
          <named-connection caption='matches' name='textscan.0p7s5qs1t970ue1a79vec0k7vmm3'>
            <connection class='textscan' directory='C:/Users/ITI Aundh 4/Downloads/The Spark Foundation Tasks/Indian Premier League' filename='matches.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0p7s5qs1t970ue1a79vec0k7vmm3' name='deliveries.csv' table='[deliveries#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='integer' name='match_id' ordinal='0' />
            <column datatype='integer' name='inning' ordinal='1' />
            <column datatype='string' name='batting_team' ordinal='2' />
            <column datatype='string' name='bowling_team' ordinal='3' />
            <column datatype='integer' name='over' ordinal='4' />
            <column datatype='integer' name='ball' ordinal='5' />
            <column datatype='string' name='batsman' ordinal='6' />
            <column datatype='string' name='non_striker' ordinal='7' />
            <column datatype='string' name='bowler' ordinal='8' />
            <column datatype='integer' name='is_super_over' ordinal='9' />
            <column datatype='integer' name='wide_runs' ordinal='10' />
            <column datatype='integer' name='bye_runs' ordinal='11' />
            <column datatype='integer' name='legbye_runs' ordinal='12' />
            <column datatype='integer' name='noball_runs' ordinal='13' />
            <column datatype='integer' name='penalty_runs' ordinal='14' />
            <column datatype='integer' name='batsman_runs' ordinal='15' />
            <column datatype='integer' name='extra_runs' ordinal='16' />
            <column datatype='integer' name='total_runs' ordinal='17' />
            <column datatype='string' name='player_dismissed' ordinal='18' />
            <column datatype='string' name='dismissal_kind' ordinal='19' />
            <column datatype='string' name='fielder' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0p7s5qs1t970ue1a79vec0k7vmm3' name='matches.csv' table='[matches#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='id' ordinal='0' />
              <column datatype='date' date-parse-format='yyyy' name='season' ordinal='1' />
              <column datatype='string' name='city' ordinal='2' />
              <column datatype='date' name='date' ordinal='3' />
              <column datatype='string' name='team1' ordinal='4' />
              <column datatype='string' name='team2' ordinal='5' />
              <column datatype='string' name='toss_winner' ordinal='6' />
              <column datatype='string' name='toss_decision' ordinal='7' />
              <column datatype='string' name='result' ordinal='8' />
              <column datatype='integer' name='dl_applied' ordinal='9' />
              <column datatype='string' name='winner' ordinal='10' />
              <column datatype='integer' name='win_by_runs' ordinal='11' />
              <column datatype='integer' name='win_by_wickets' ordinal='12' />
              <column datatype='string' name='player_of_match' ordinal='13' />
              <column datatype='string' name='venue' ordinal='14' />
              <column datatype='string' name='umpire1' ordinal='15' />
              <column datatype='string' name='umpire2' ordinal='16' />
              <column datatype='string' name='umpire3' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.0p7s5qs1t970ue1a79vec0k7vmm3' name='deliveries.csv' table='[deliveries#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='integer' name='match_id' ordinal='0' />
              <column datatype='integer' name='inning' ordinal='1' />
              <column datatype='string' name='batting_team' ordinal='2' />
              <column datatype='string' name='bowling_team' ordinal='3' />
              <column datatype='integer' name='over' ordinal='4' />
              <column datatype='integer' name='ball' ordinal='5' />
              <column datatype='string' name='batsman' ordinal='6' />
              <column datatype='string' name='non_striker' ordinal='7' />
              <column datatype='string' name='bowler' ordinal='8' />
              <column datatype='integer' name='is_super_over' ordinal='9' />
              <column datatype='integer' name='wide_runs' ordinal='10' />
              <column datatype='integer' name='bye_runs' ordinal='11' />
              <column datatype='integer' name='legbye_runs' ordinal='12' />
              <column datatype='integer' name='noball_runs' ordinal='13' />
              <column datatype='integer' name='penalty_runs' ordinal='14' />
              <column datatype='integer' name='batsman_runs' ordinal='15' />
              <column datatype='integer' name='extra_runs' ordinal='16' />
              <column datatype='integer' name='total_runs' ordinal='17' />
              <column datatype='string' name='player_dismissed' ordinal='18' />
              <column datatype='string' name='dismissal_kind' ordinal='19' />
              <column datatype='string' name='fielder' ordinal='20' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>756</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>season</remote-name>
            <remote-type>7</remote-type>
            <local-name>[season]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>season</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>756</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team1</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>team2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[team2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>team2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_winner</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>toss_decision</remote-name>
            <remote-type>129</remote-type>
            <local-name>[toss_decision]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>toss_decision</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>result</remote-name>
            <remote-type>129</remote-type>
            <local-name>[result]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>result</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dl_applied</remote-name>
            <remote-type>20</remote-type>
            <local-name>[dl_applied]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>dl_applied</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>756</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>winner</remote-name>
            <remote-type>129</remote-type>
            <local-name>[winner]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>winner</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_runs]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_runs</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>756</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>win_by_wickets</remote-name>
            <remote-type>20</remote-type>
            <local-name>[win_by_wickets]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>win_by_wickets</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>756</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_of_match</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_of_match]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>player_of_match</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>venue</remote-name>
            <remote-type>129</remote-type>
            <local-name>[venue]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>venue</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire1</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire1]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire1</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire2]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire2</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>umpire3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[umpire3]</local-name>
            <parent-name>[matches.csv]</parent-name>
            <remote-alias>umpire3</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>756</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[matches.csv_61174EA6B25F4B7DBF97940231215C6B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>match_id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[match_id]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>match_id</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>inning</remote-name>
            <remote-type>20</remote-type>
            <local-name>[inning]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>inning</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batting_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batting_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batting_team</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowling_team</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowling_team]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowling_team</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>over</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ball</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ball]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>ball</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman</remote-name>
            <remote-type>129</remote-type>
            <local-name>[batsman]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>non_striker</remote-name>
            <remote-type>129</remote-type>
            <local-name>[non_striker]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>non_striker</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bowler</remote-name>
            <remote-type>129</remote-type>
            <local-name>[bowler]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bowler</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_super_over</remote-name>
            <remote-type>20</remote-type>
            <local-name>[is_super_over]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>is_super_over</remote-alias>
            <ordinal>27</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>wide_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[wide_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>wide_runs</remote-alias>
            <ordinal>28</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>bye_runs</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>legbye_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[legbye_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>legbye_runs</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>noball_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[noball_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>noball_runs</remote-alias>
            <ordinal>31</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>penalty_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[penalty_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>penalty_runs</remote-alias>
            <ordinal>32</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>batsman_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[batsman_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>batsman_runs</remote-alias>
            <ordinal>33</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>extra_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[extra_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>extra_runs</remote-alias>
            <ordinal>34</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_runs</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_runs]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>total_runs</remote-alias>
            <ordinal>35</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>player_dismissed</remote-name>
            <remote-type>129</remote-type>
            <local-name>[player_dismissed]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>player_dismissed</remote-alias>
            <ordinal>36</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dismissal_kind</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dismissal_kind]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>dismissal_kind</remote-alias>
            <ordinal>37</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fielder</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fielder]</local-name>
            <parent-name>[deliveries.csv]</parent-name>
            <remote-alias>fielder</remote-alias>
            <ordinal>38</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[deliveries.csv_398B1775266349F3B001182E734DB192]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='deliveries.csv' datatype='table' name='[__tableau_internal_object_id__].[deliveries.csv_398B1775266349F3B001182E734DB192]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
      <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
      <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
      <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
      <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
      <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
      <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
      <column caption='Bye Runs' datatype='integer' name='[bye_runs]' role='measure' type='quantitative' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Dismissal Kind' datatype='string' name='[dismissal_kind]' role='dimension' type='nominal' />
      <column caption='Dl Applied' datatype='integer' name='[dl_applied]' role='measure' type='quantitative' />
      <column caption='Extra Runs' datatype='integer' name='[extra_runs]' role='measure' type='quantitative' />
      <column caption='Fielder' datatype='string' name='[fielder]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Inning' datatype='integer' name='[inning]' role='measure' type='quantitative' />
      <column caption='Is Super Over' datatype='integer' name='[is_super_over]' role='measure' type='quantitative' />
      <column caption='Legbye Runs' datatype='integer' name='[legbye_runs]' role='measure' type='quantitative' />
      <column caption='Match Id' datatype='integer' name='[match_id]' role='dimension' type='ordinal' />
      <column caption='Noball Runs' datatype='integer' name='[noball_runs]' role='measure' type='quantitative' />
      <column caption='Non Striker' datatype='string' name='[non_striker]' role='dimension' type='nominal' />
      <column caption='Over' datatype='integer' name='[over]' role='measure' type='quantitative' />
      <column caption='Penalty Runs' datatype='integer' name='[penalty_runs]' role='measure' type='quantitative' />
      <column caption='Player Dismissed' datatype='string' name='[player_dismissed]' role='dimension' type='nominal' />
      <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
      <column caption='Result' datatype='string' name='[result]' role='dimension' type='nominal' />
      <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
      <column caption='Team1' datatype='string' name='[team1]' role='dimension' type='nominal' />
      <column caption='Team2' datatype='string' name='[team2]' role='dimension' type='nominal' />
      <column caption='Toss Decision' datatype='string' name='[toss_decision]' role='dimension' type='nominal' />
      <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
      <column caption='Total Runs' datatype='integer' name='[total_runs]' role='measure' type='quantitative' />
      <column caption='Umpire1' datatype='string' name='[umpire1]' role='dimension' type='nominal' />
      <column caption='Umpire2' datatype='string' name='[umpire2]' role='dimension' type='nominal' />
      <column caption='Umpire3' datatype='string' name='[umpire3]' role='dimension' type='nominal' />
      <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
      <column caption='Wide Runs' datatype='integer' name='[wide_runs]' role='measure' type='quantitative' />
      <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
      <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
      <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[deliveries.csv_398B1775266349F3B001182E734DB192]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' pivot='key' type='quantitative' />
      <column-instance column='[win_by_runs]' derivation='Avg' name='[avg:win_by_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[win_by_wickets]' derivation='Avg' name='[avg:win_by_wickets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
      <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
      <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
      <column-instance column='[ball]' derivation='Sum' name='[sum:ball:qk]' pivot='key' type='quantitative' />
      <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[bye_runs]' derivation='Sum' name='[sum:bye_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[dl_applied]' derivation='Sum' name='[sum:dl_applied:qk]' pivot='key' type='quantitative' />
      <column-instance column='[extra_runs]' derivation='Sum' name='[sum:extra_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[inning]' derivation='Sum' name='[sum:inning:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_super_over]' derivation='Sum' name='[sum:is_super_over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[legbye_runs]' derivation='Sum' name='[sum:legbye_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[noball_runs]' derivation='Sum' name='[sum:noball_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[over]' derivation='Sum' name='[sum:over:qk]' pivot='key' type='quantitative' />
      <column-instance column='[penalty_runs]' derivation='Sum' name='[sum:penalty_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[total_runs]' derivation='Sum' name='[sum:total_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[wide_runs]' derivation='Sum' name='[sum:wide_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[win_by_runs]' derivation='Sum' name='[sum:win_by_runs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[win_by_wickets]' derivation='Sum' name='[sum:win_by_wickets:qk]' pivot='key' type='quantitative' />
      <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:venue:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Dr. Y.S. Rajasekhara Reddy ACA-VDCA Cricket Stadium&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rajiv Gandhi International Stadium, Uppal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eden Gardens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MA Chidambaram Stadium, Chepauk&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brabourne Stadium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Newlands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Feroz Shah Kotla Ground&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sawai Mansingh Stadium&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dubai International Cricket Stadium&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rajiv Gandhi Intl. Cricket Stadium&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Buffalo Park&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;OUTsurance Oval&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kingsmead&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;SuperSport Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;ACA-VDCA Stadium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Maharashtra Cricket Association Stadium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;IS Bindra Stadium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St George&apos;s Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;De Beers Diamond Oval&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Punjab Cricket Association IS Bindra Stadium, Mohali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Green Park&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Shaheed Veer Narayan Singh International Stadium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Himachal Pradesh Cricket Association Stadium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sharjah Cricket Stadium&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JSCA International Stadium Complex&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Subrata Roy Sahara Stadium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M. A. Chidambaram Stadium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;M. Chinnaswamy Stadium&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vidarbha Cricket Association Stadium, Jamtha&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sardar Patel Stadium, Motera&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wankhede Stadium&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dr DY Patil Sports Academy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Punjab Cricket Association Stadium, Mohali&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M Chinnaswamy Stadium&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nehru Stadium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Holkar Cricket Stadium&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sheikh Zayed Stadium&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Feroz Shah Kotla&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saurashtra Cricket Association Stadium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Barabati Stadium&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Wanderers Stadium&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:bowler:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;A Joseph&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;AD Mathews&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Avesh Khan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;BW Hilfenhaus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;D Wiese&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;DW Steyn&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;HV Patel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;JD Unadkat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;K Rabada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;L Balaji&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;M Muralitharan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;MM Sharma&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;P Amarnath&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;PV Tambe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;RG More&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;S Kaul&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sachin Baby&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;SPD Smith&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;T Curran&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;VR Aaron&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A Mishra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AB Agarkar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ankit Sharma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;BAW Mendis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CL White&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;DL Chahar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;H Brar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;J Searles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;JP Faulkner&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;KMDN Kulasekara&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;M Ali&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;MF Maharoof&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;N Saini&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Parvez Rasool&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;R Tewatia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;RV Gomez&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;S Sharma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shivam Sharma&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;SS Agarwal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;TS Mills&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;YA Abdulla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AC Gilchrist&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;AR Patel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bipul Sharma&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;D du Preez&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;DP Vijaykumar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;IK Pathan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;J Yadav&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;K Goel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuldeep Yadav&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;M Lomror&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;MJ Henry&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;NL McCullum&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;P Kumar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;PJ Sangwan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;RA Tripathi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Curran&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;S Vidyut&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;SJ Srivastava&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;STR Binny&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;V Kohli&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Z Khan&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Harbhajan Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A Nehra&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;A Singh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;AJ Finch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;B Geeves&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;C Nanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;DE Bollinger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;IC Pandey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;JEC Franklin&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KAJ Roach&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;L Plunkett&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;M Vijay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mohammad Nabi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;P Negi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;R McLaren&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;RN ten Doeschate&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;S Lamichhane&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SB Joshi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;SMSM Senanayake&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;T Thushara&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;VY Mahesh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;A Kumble&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;AD Russell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azhar Mahmood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;C de Grandhomme&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;D Willey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;F du Plessis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;I Malhotra&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;JDP Oram&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;K Santokie&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;L Ferguson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;M Ntini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;MN Samuels&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;P Awana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;R Salam&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;RG Sharma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;S Kaushik&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sandeep Sharma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;SM Boland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;T Henderson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;VRV Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;A Choudhary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AC Thomas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;AS Rajpoot&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;BJ Hodge&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;D Kalyankrishna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DR Smith&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harmeet Singh&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;JA Morkel&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;K Gowtham&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;KV Sharma&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;M Manhas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;MJ McClenaghan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;NLTC Perera&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;PM Sarvesh Kumar&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rashid Khan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Dhawan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;S Warrier&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;SK Raina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sunny Gupta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;V Pratap Singh&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;SP Narine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AA Kazi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;AN Ahmed&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;BA Stokes&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CK Kapugedera&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;DJ Thornely&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;GS Sandhu&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;J Botha&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Joginder Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;KK Cooper&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;LR Shukla&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;MB Parmar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mustafizur Rahman&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;P Suyal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;R Sharma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;RS Bopara&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;S Randiv&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shahid Afridi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;TM Head&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Y Nagar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;A Ashish Reddy&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AB Dinda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ankit Soni&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;BB Sran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;CR Brathwaite&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;DL Vettori&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;H Gurney&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;J Suchith&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;JR Hopes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;KP Appanna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;M Ashwin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;MG Johnson&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;NB Singh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;PC Valthaty&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;R Vinay Kumar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;RW Price&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;S Sreesanth&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shoaib Ahmed&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;SS Mundhe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Umar Gul&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;YK Pathan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AA Chavan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;AM Rahane&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;B Stanlake&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;CJ Jordan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;DJ Hussey&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;GJ Maxwell&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;J Archer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;JM Kemp&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;KH Pandya&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;LMP Simmons&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mandeep Singh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MR Marsh&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;P Raj&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;R Ashwin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;RR Powar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;S Narwal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SD Chitnis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;SR Tendulkar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;TL Suman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;WPUJC Vaas&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;A Dananjaya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AC Voges&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;AS Raut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;BJ Rohrer&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;D Salunkhe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;DS Kulkarni&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Harmeet Singh (2)&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jaskaran Singh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;K Khejroliya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;KW Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;M Markande&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;MK Tiwary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;NM Coulter-Nile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;R Rampaul&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;RD Chahar&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;S Dube&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SA Abbott&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SK Trivedi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;SW Tait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;V Sehwag&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;A Symonds&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;AJ Tye&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;C Munro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;CH Gayle&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gagandeep Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;GB Hogg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;JH Kallis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kamran Khan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LA Carseldine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;M Wood&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mohammed Shami&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;P Parameswaran&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;R Ninan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;RP Singh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;S Mavi&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SB Styris&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;SN Khan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;TA Boult&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UT Yadav&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;WA Mota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A Nel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;A Uniyal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;AL Menaria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;B Laughlin&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;CH Morris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;DJ Harris&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;GD McGrath&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Imran Tahir&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;JJ Bumrah&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Karanveer Singh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;LH Ferguson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MA Khote&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mohammed Siraj&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;R Parag&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;RR Bhatkal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;S Midhun&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SB Wagh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;SN Thakur&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tejas Baroka&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington Sundar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AA Jhunjhunwala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;AM Salvi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;BA Bhatt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;CJ McKay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;DJ Muthuswami&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;GR Napier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;J Behrendorff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;JO Holder&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;KJ Abbott&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;LPC Silva&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mashrafe Mortaza&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MS Gony&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;P Sahu&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;R Sathish&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;RR Raje&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;S Rana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;SE Bond&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;TM Dilshan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Y Gnaneswara Rao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;AA Noffke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Anand Rajan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Basil Thampi&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;CK Langeveldt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;DJG Sammy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gurkeerat Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;J Dala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;JP Duminy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;KM Asif&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LRPL Taylor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;MC Henriques&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;N Rana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Pankaj Singh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;R Shukla&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;RS Gavaskar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;S Rutherford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shakib Al Hasan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;SR Watson&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;TP Sudhindra&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;AF Milne&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;B Akhil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C Ganapathy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DAJ Bracewell&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;DJ Bravo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;FH Edwards&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;I Sharma&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;JDS Neesham&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;K Upadhyay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;L Livingstone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;M Santner&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mohammad Asif&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;P Krishna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;R Bhatia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;RJ Harris&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;S Kuggeleijn&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SB Bangar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;SM Harwood&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;T Natarajan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;VS Malik&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;PP Chawla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;A Flintoff&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AD Mascarenhas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;AUK Pathan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;BMAJ Mendis&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;D Short&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;DT Christian&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;HH Pandya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;JD Ryder&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;K Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;L Ablish&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;M Morkel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;MM Patel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;O Thomas&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;PP Ojha&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;RE van der Merwe&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;S Gopal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SA Yadav&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;SK Warne&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Swapnil Singh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;V Shankar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;AB McDonald&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anureet Singh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B Kumar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;BCJ Cutting&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CR Woakes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;DNT Zoysa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;H Vihari&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;J Syed Mohammad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;JW Hastings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;KP Pietersen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;M de Lange&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;MG Neser&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;ND Doshi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PD Collingwood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;RA Jadeja&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Aravind&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;S Sriram&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shoaib Akhtar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;SS Sarkar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Y Venugopal Rao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;YS Chahal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;A Zampa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;AM Nayar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;B Lee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;CJ Anderson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;DJ Hooda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;GH Vihari&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iqbal Abdulla&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;JJ van der Wath&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;KC Cariappa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;LJ Wright&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MA Starc&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MP Stoinis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;P R Barman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;RR Bose&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;S Nadeem&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;SC Ganguly&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sohail Tanvir&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;TG Southee&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;WD Parnell&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Mithun&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;A Roy&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;AG Murtaza&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;B Chipli&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;DB Ravi Teja&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;FY Fazal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;I Sodhi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;JE Taylor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KA Pollard&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;L Ngidi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;M Ur Rahman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mohammad Hafeez&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;P Prasanth&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;R Dhawan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;RJ Peterson&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;S Ladda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SB Jakati&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;SM Pollock&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;T Shamsi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;VS Yeligati&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;SL Malinga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;A Chandila&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abdur Razzak&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;AP Dole&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;BE Hendricks&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CRD Fernando&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;DP Nannes&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;H Viljoen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;J Theron&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;K Ahmed&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;KS Williamson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;M Kartik&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;MJ Clarke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;NJ Rimmington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;PJ Cummins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;RA Shaikh&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Badree&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;S Tyagi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shoaib Malik&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;ST Jayasuriya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;V Chakravarthy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yuvraj Singh&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[avg:win_by_runs:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_runs:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:legbye_runs:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:is_super_over:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:dl_applied:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:extra_runs:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:inning:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:noball_runs:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:penalty_runs:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:total_runs:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:wide_runs:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:over:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[avg:win_by_wickets:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_wickets:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:bye_runs:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:date:ok]' type='palette'>
            <map to='#499894'>
              <bucket>2007</bucket>
            </map>
            <map to='#499894'>
              <bucket>2027</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>1930</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2019</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2003</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>2023</bucket>
            </map>
            <map to='#79706e'>
              <bucket>2011</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2008</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>2028</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2004</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>2024</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>2017</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>1931</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>2020</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>2015</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2005</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>2025</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>2012</bucket>
            </map>
            <map to='#d37295'>
              <bucket>2013</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>2016</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>2018</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2009</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2029</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2006</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>2026</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2001</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>2021</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>2014</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>2010</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2002</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>2022</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:winner:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pune Warriors&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='deliveries.csv' id='deliveries.csv_398B1775266349F3B001182E734DB192'>
            <properties context=''>
              <relation connection='textscan.0p7s5qs1t970ue1a79vec0k7vmm3' name='deliveries.csv' table='[deliveries#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='match_id' ordinal='0' />
                  <column datatype='integer' name='inning' ordinal='1' />
                  <column datatype='string' name='batting_team' ordinal='2' />
                  <column datatype='string' name='bowling_team' ordinal='3' />
                  <column datatype='integer' name='over' ordinal='4' />
                  <column datatype='integer' name='ball' ordinal='5' />
                  <column datatype='string' name='batsman' ordinal='6' />
                  <column datatype='string' name='non_striker' ordinal='7' />
                  <column datatype='string' name='bowler' ordinal='8' />
                  <column datatype='integer' name='is_super_over' ordinal='9' />
                  <column datatype='integer' name='wide_runs' ordinal='10' />
                  <column datatype='integer' name='bye_runs' ordinal='11' />
                  <column datatype='integer' name='legbye_runs' ordinal='12' />
                  <column datatype='integer' name='noball_runs' ordinal='13' />
                  <column datatype='integer' name='penalty_runs' ordinal='14' />
                  <column datatype='integer' name='batsman_runs' ordinal='15' />
                  <column datatype='integer' name='extra_runs' ordinal='16' />
                  <column datatype='integer' name='total_runs' ordinal='17' />
                  <column datatype='string' name='player_dismissed' ordinal='18' />
                  <column datatype='string' name='dismissal_kind' ordinal='19' />
                  <column datatype='string' name='fielder' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='matches.csv' id='matches.csv_61174EA6B25F4B7DBF97940231215C6B'>
            <properties context=''>
              <relation connection='textscan.0p7s5qs1t970ue1a79vec0k7vmm3' name='matches.csv' table='[matches#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='integer' name='id' ordinal='0' />
                  <column datatype='date' date-parse-format='yyyy' name='season' ordinal='1' />
                  <column datatype='string' name='city' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='string' name='team1' ordinal='4' />
                  <column datatype='string' name='team2' ordinal='5' />
                  <column datatype='string' name='toss_winner' ordinal='6' />
                  <column datatype='string' name='toss_decision' ordinal='7' />
                  <column datatype='string' name='result' ordinal='8' />
                  <column datatype='integer' name='dl_applied' ordinal='9' />
                  <column datatype='string' name='winner' ordinal='10' />
                  <column datatype='integer' name='win_by_runs' ordinal='11' />
                  <column datatype='integer' name='win_by_wickets' ordinal='12' />
                  <column datatype='string' name='player_of_match' ordinal='13' />
                  <column datatype='string' name='venue' ordinal='14' />
                  <column datatype='string' name='umpire1' ordinal='15' />
                  <column datatype='string' name='umpire2' ordinal='16' />
                  <column datatype='string' name='umpire3' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[id]' />
              <expression op='[match_id]' />
            </expression>
            <first-end-point object-id='matches.csv_61174EA6B25F4B7DBF97940231215C6B' />
            <second-end-point object-id='deliveries.csv_398B1775266349F3B001182E734DB192' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Match Analysis'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#5e5e5e' fontname='Tableau Bold' fontsize='18'>Toss Winner Vs Match Winner</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column-instance column='[toss_winner]' derivation='None' name='[none:toss_winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Toss Winner' datatype='string' name='[toss_winner]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:winner:nk]' />
              <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' value='68' />
            <format attr='height' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:toss_winner:nk]' value='36' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:toss_winner:nk]' value='116' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:toss_winner:nk]' value='0' />
            <format attr='text-orientation' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' value='-90' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' />
              <text column='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16cief70084kxo1amh85p1r5lc5s].[none:toss_winner:nk]</rows>
        <cols>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{B71B6AF7-0993-4E8C-ABAF-F9EB83447430}' />
    </worksheet>
    <worksheet name='Matchs per season'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold' fontsize='18'>Matches per Season</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Season' datatype='date' name='[season]' role='dimension' type='quantitative' />
            <column-instance column='[season]' derivation='Year-Trunc' name='[tyr:season:ok]' pivot='key' type='ordinal' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[tyr:season:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tyr:season:ok]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[tyr:season:ok]' member='#2018-01-01 00:00:00#' />
                <groupfilter function='member' level='[tyr:season:ok]' member='#2019-01-01 00:00:00#' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[tyr:season:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[yr:date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]</rows>
        <cols>[federated.16cief70084kxo1amh85p1r5lc5s].[tyr:season:ok]</cols>
      </table>
      <simple-id uuid='{9005CC4C-0175-4A9D-BAC8-4B9809DA1B64}' />
    </worksheet>
    <worksheet name='Most win by Team'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#0c0888' fontname='Tableau Bold' fontsize='18'>Most winning Teams</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:winner:nk]' />
              <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mumbai Indians&quot;</bucket>
              <bucket>&quot;Chennai Super Kings&quot;</bucket>
              <bucket>&quot;Kolkata Knight Riders&quot;</bucket>
              <bucket>&quot;Royal Challengers Bangalore&quot;</bucket>
              <bucket>&quot;Kings XI Punjab&quot;</bucket>
              <bucket>&quot;Rajasthan Royals&quot;</bucket>
              <bucket>&quot;Delhi Daredevils&quot;</bucket>
              <bucket>&quot;Sunrisers Hyderabad&quot;</bucket>
              <bucket>&quot;Deccan Chargers&quot;</bucket>
              <bucket>&quot;Gujarat Lions&quot;</bucket>
              <bucket>&quot;Pune Warriors&quot;</bucket>
              <bucket>&quot;Rising Pune Supergiant&quot;</bucket>
              <bucket>&quot;Delhi Capitals&quot;</bucket>
              <bucket>&quot;Kochi Tuskers Kerala&quot;</bucket>
              <bucket>&quot;Rising Pune Supergiants&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' value='Most winning teams'>
              <formatted-text>
                <run>Most winning teams</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]</rows>
        <cols>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</cols>
      </table>
      <simple-id uuid='{D80937E4-B202-46FF-92E7-0C9A396B6D25}' />
    </worksheet>
    <worksheet name='Player of Match'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#76b7b2' fontname='Tableau Bold' fontsize='18'>Top 10 Player of Match</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <_.fcp.ObjectModelTableType.false...column caption='deliveries.csv' datatype='integer' name='[__tableau_internal_object_id__].[deliveries.csv_398B1775266349F3B001182E734DB192]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[deliveries.csv_398B1775266349F3B001182E734DB192]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='deliveries.csv' datatype='table' name='[__tableau_internal_object_id__].[deliveries.csv_398B1775266349F3B001182E734DB192]' role='measure' type='quantitative' />
            <column-instance column='[player_of_match]' derivation='None' name='[none:player_of_match:nk]' pivot='key' type='nominal' />
            <column caption='Player Of Match' datatype='string' name='[player_of_match]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:player_of_match:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([__tableau_internal_object_id__].[deliveries.csv_398B1775266349F3B001182E734DB192])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:player_of_match:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[none:player_of_match:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' num-steps='5' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' value='Top 10 players of match'>
              <formatted-text>
                <run>Top 10 players of match</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' />
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' />
              <text column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:player_of_match:nk]' />
              <text column='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{11FC61DE-5F82-436A-9B53-80E0CC2C2EB1}' />
    </worksheet>
    <worksheet name='Players with Highest Runs'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#e15759' fontname='Tableau Bold' fontsize='12'>Top 15 Players (Highest Runs)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk]'>
            <groupfilter count='15' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([batsman])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' num-steps='5' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' />
              <size column='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' />
              <text column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk]' />
              <text column='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{9A93C061-F8A6-41FF-B2A2-633EB3E977A3}' />
    </worksheet>
    <worksheet name='Stadiumwise win'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Stadium Vs Match Win</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column-instance column='[venue]' derivation='None' name='[none:venue:nk]' pivot='key' type='nominal' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Venue' datatype='string' name='[venue]' role='dimension' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' included-values='in-range'>
            <min>6</min>
            <max>45</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16cief70084kxo1amh85p1r5lc5s].[none:venue:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' value='21' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:venue:nk]' value='22' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:venue:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='861' />
                <format attr='maxwidth' value='861' />
                <format attr='minheight' value='374' />
                <format attr='maxheight' value='374' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk] / [federated.16cief70084kxo1amh85p1r5lc5s].[none:venue:nk])</rows>
        <cols>[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]</cols>
      </table>
      <simple-id uuid='{37D2346B-DB0C-45BB-B5CA-FB89F68E4F3D}' />
    </worksheet>
    <worksheet name='Stronger Team'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#76b7b2' fontname='Tableau Bold' fontsize='18'>Stronger Team</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column-instance column='[win_by_runs]' derivation='Sum' name='[sum:win_by_runs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[win_by_wickets]' derivation='Sum' name='[sum:win_by_wickets:qk]' pivot='key' type='quantitative' />
            <column caption='Win By Runs' datatype='integer' name='[win_by_runs]' role='measure' type='quantitative' />
            <column caption='Win By Wickets' datatype='integer' name='[win_by_wickets]' role='measure' type='quantitative' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_runs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_wickets:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.16cief70084kxo1amh85p1r5lc5s].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_runs:qk]&quot;</bucket>
              <bucket>&quot;[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_wickets:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:winner:nk]' />
              <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <natural-sort column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' direction='ASC' />
          <filter class='quantitative' column='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_runs:qk]' included-values='in-range'>
            <min>0</min>
            <max>1866</max>
          </filter>
          <filter class='quantitative' column='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_wickets:qk]' included-values='in-range'>
            <min>0</min>
            <max>351</max>
          </filter>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</column>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[:Measure Names]</column>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_runs:qk]</column>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_wickets:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.16cief70084kxo1amh85p1r5lc5s].[:Measure Names]' value='35' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.16cief70084kxo1amh85p1r5lc5s].[Multiple Values]' value='n#,##0&quot; Runs&quot;;-#,##0&quot; Runs&quot;' />
            <format attr='text-orientation' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' value='-90' />
            <format attr='text-orientation' field='[federated.16cief70084kxo1amh85p1r5lc5s].[:Measure Names]' value='-90' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16cief70084kxo1amh85p1r5lc5s].[Multiple Values]</rows>
        <cols>([federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk] / [federated.16cief70084kxo1amh85p1r5lc5s].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{10A58BD5-96F6-4CF8-B228-6DAEF0F153ED}' />
    </worksheet>
    <worksheet name='Top 10 Batsman'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#d4a6c8' fontname='Tableau Bold' fontsize='18'>Top 10 Batsman</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <column caption='Batsman' datatype='string' name='[batsman]' role='dimension' type='nominal' />
            <column caption='Batsman Runs' datatype='integer' name='[batsman_runs]' role='measure' type='quantitative' />
            <column caption='Batting Team' datatype='string' name='[batting_team]' role='dimension' type='nominal' />
            <column-instance column='[batsman]' derivation='None' name='[none:batsman:nk]' pivot='key' type='nominal' />
            <column-instance column='[batting_team]' derivation='None' name='[none:batting_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[batsman_runs]' derivation='Sum' name='[sum:batsman_runs:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([batsman_runs])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:batsman:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <alphabetic-sort column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk]' direction='DESC' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16cief70084kxo1amh85p1r5lc5s].[none:batting_team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='68' />
            <format attr='height' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:batting_team:nk]' value='22' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk]' value='92' />
            <format attr='width' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:batting_team:nk]' value='176' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' palette='tableau-map-blue-green' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' />
              <text column='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk] / [federated.16cief70084kxo1amh85p1r5lc5s].[none:batting_team:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{743741A8-5693-4A28-AC1F-39CF6260B073}' />
    </worksheet>
    <worksheet name='Top 10 Bowler'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Bold' fontsize='18'>Top 10 Bowler</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <column caption='Ball' datatype='integer' name='[ball]' role='measure' type='quantitative' />
            <column caption='Bowler' datatype='string' name='[bowler]' role='dimension' type='nominal' />
            <column caption='Bowling Team' datatype='string' name='[bowling_team]' role='dimension' type='nominal' />
            <column-instance column='[bowler]' derivation='None' name='[none:bowler:nk]' pivot='key' type='nominal' />
            <column-instance column='[bowling_team]' derivation='None' name='[none:bowling_team:nk]' pivot='key' type='nominal' />
            <column-instance column='[ball]' derivation='Sum' name='[sum:ball:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowler:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([ball])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:bowler:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowler:nk]' direction='DESC' measure-to-sort-by='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]' shelf='rows' />
            <shelf-sort-v2 dimension-to-sort='[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowling_team:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowler:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='68' />
            <format attr='height' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowling_team:nk]' value='24' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowler:nk]' value='80' />
            <format attr='width' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowling_team:nk]' value='180' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#9e3d22</color>
                <color>#a7513a</color>
                <color>#b16854</color>
                <color>#bb8171</color>
                <color>#c59c91</color>
                <color>#cfb9b4</color>
                <color>#d9d9d9</color>
                <color>#b4c0cb</color>
                <color>#92a9be</color>
                <color>#7493b1</color>
                <color>#587fa4</color>
                <color>#406d97</color>
                <color>#2b5c8a</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]' value='Top 10 Bowler'>
              <formatted-text>
                <run>Top 10 Bowler</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]' />
              <text column='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.16cief70084kxo1amh85p1r5lc5s].[none:bowler:nk] / [federated.16cief70084kxo1amh85p1r5lc5s].[none:bowling_team:nk])</rows>
        <cols />
      </table>
      <simple-id uuid='{6F1128DB-F762-4DC5-A328-C98D096BF14F}' />
    </worksheet>
    <worksheet name='Top 10 teams'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold' fontsize='18'>Top 10 Teams</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='deliveries.csv (Multiple Connections)' name='federated.16cief70084kxo1amh85p1r5lc5s' />
          </datasources>
          <datasource-dependencies datasource='federated.16cief70084kxo1amh85p1r5lc5s'>
            <_.fcp.ObjectModelTableType.false...column caption='matches.csv' datatype='integer' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='matches.csv' datatype='table' name='[__tableau_internal_object_id__].[matches.csv_61174EA6B25F4B7DBF97940231215C6B]' role='measure' type='quantitative' />
            <column-instance column='[winner]' derivation='None' name='[none:winner:nk]' pivot='key' type='nominal' />
            <column caption='Winner' datatype='string' name='[winner]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:winner:nk]' />
              <groupfilter function='member' level='[none:winner:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' value='40' />
            <format attr='width' value='60' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' value='164' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' palette='tableau-orange-light' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' value='Top 10 Teams'>
              <formatted-text>
                <run>Top 10 Teams</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' />
              <lod column='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{70661F7B-BFC6-4DB6-837F-D8F599383F31}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='50000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='50000' id='5' w='82400' x='800' y='1000'>
              <zone h='50000' id='11' name='Player of Match' w='36400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='50000' id='13' name='Most win by Team' w='46000' x='37200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='50000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='41000' id='14' name='Most win by Team' pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='solid' />
                  <format attr='border-width' value='1' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='23' name='Top 10 teams' pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' w='16000' x='83200' y='42000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone h='48000' id='19' name='Top 10 Batsman' w='36400' x='800' y='51000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48000' id='20' name='Top 10 Bowler' w='35600' x='37200' y='51000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='48000' id='22' name='Top 10 teams' w='26400' x='72800' y='51000'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10375' id='12' name='Player of Match' pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' w='32700' x='2400' y='38500' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7000' id='21' name='Top 10 Bowler' pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]' w='14000' x='58100' y='51875' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1750' minheight='1750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='47' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='46' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='50000' id='11' is-fixed='true' name='Player of Match' w='36400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='10375' id='12' name='Player of Match' pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' w='32700' x='2400' y='38500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='50000' id='13' is-fixed='true' name='Most win by Team' w='46000' x='37200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='41000' id='14' name='Most win by Team' pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48000' id='19' is-fixed='true' name='Top 10 Batsman' w='36400' x='800' y='51000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48000' id='20' is-fixed='true' name='Top 10 Bowler' w='35600' x='37200' y='51000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='7000' id='21' name='Top 10 Bowler' pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]' w='14000' x='58100' y='51875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48000' id='22' is-fixed='true' name='Top 10 teams' w='26400' x='72800' y='51000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='23' name='Top 10 teams' pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' w='16000' x='83200' y='42000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{54DCE066-D269-4D43-81EF-9C6009F569BC}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#4e79a7' fontname='Tableau Bold'>GRIP Task 5</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='story-point-caption'>
          <format attr='width' value='998' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98340' id='1' param='vert' removable='false' w='98426' x='787' y='830'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='3423' id='3' w='98426' x='787' y='830' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' fixed-size='236' h='24481' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='98426' x='787' y='4253' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='70436' id='5' paired-zone-id='4' removable='false' w='98426' x='787' y='28734'>
              <flipboard active-id='1' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Author: Mayur Rajendrakumar Ghate&#10;Task - 5: Exploratory Data Analysis - Sports&#10;Problem Statement: &#10;1. Perform ‘Exploratory Data Analysis’ on dataset ‘Indian Premier League’&#10;2. As a sports analysts, find out the most successful teams, players and factors&#10;contributing win or loss of a team.&#10;3. Suggest teams or players a company should endorse for its products.&#10;The Sparks Foundation&#10;Graduate Rotational Internship Program (GRIP) June 2021 Batch&#10;Data Science &amp; Business Analytics Tasks' captured-sheet='Dashboard 1' id='1' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{E05AE58C-A3B3-4AAE-B0DB-F39B6ED71C30}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{7D151E29-9FAF-4CA6-B001-40E6E7F39D69}' />
    </window>
    <window class='worksheet' name='Matchs per season'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[yr:date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:result:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[tyr:date:ok]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24E0ED59-9D98-4125-87EF-D38B4BED0405}' />
    </window>
    <window class='worksheet' name='Players with Highest Runs'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:player_of_match:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[yr:season:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C98A7FF0-F999-4E9A-AAB0-4F0D29DF44FE}' />
    </window>
    <window class='worksheet' name='Player of Match'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:deliveries.csv_398B1775266349F3B001182E734DB192:qk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowler:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:player_of_match:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B9CDF114-5BE0-407C-B984-26F4FB60CDBE}' />
    </window>
    <window class='worksheet' name='Most win by Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:city:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:venue:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{7670C760-3F30-48BE-9E84-70B54930F00A}' />
    </window>
    <window class='worksheet' name='Match Analysis'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{99D45DE2-7FBF-42FB-B50D-0965A3B48AC6}' />
    </window>
    <window class='worksheet' name='Stronger Team'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_wickets:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:win_by_runs:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[:Measure Names]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:toss_winner:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E2A9E37-BC7B-4FAC-A062-7ABABCD60AB6}' />
    </window>
    <window class='worksheet' name='Stadiumwise win'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[none:venue:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:venue:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A37B81A9-5BB2-4CBF-B4D5-AA3DBC4AD86F}' />
    </window>
    <window class='worksheet' name='Top 10 Batsman'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:batsman_runs:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:batsman:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:batting_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4DBD56C-DD1F-45BC-A1C2-70D0D3615E5A}' />
    </window>
    <window class='worksheet' name='Top 10 Bowler'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[sum:ball:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowler:nk]</field>
            <field>[federated.16cief70084kxo1amh85p1r5lc5s].[none:bowling_team:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{27515810-A45B-4665-A5D5-554BCF0A911D}' />
    </window>
    <window class='worksheet' name='Top 10 teams'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.16cief70084kxo1amh85p1r5lc5s].[__tableau_internal_object_id__].[cnt:matches.csv_61174EA6B25F4B7DBF97940231215C6B:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C95BC7AB-3C2D-46D1-A7B6-25755316CE66}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Most win by Team'>
          <zoom type='entire-view' />
          <highlight field='[federated.16cief70084kxo1amh85p1r5lc5s].[none:winner:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Player of Match' />
        <viewpoint name='Top 10 Batsman' />
        <viewpoint name='Top 10 Bowler' />
        <viewpoint name='Top 10 teams' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{BBB3EDA7-67E7-4C77-B0E1-768FE08F0881}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Match Analysis' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Matchs per season' width='192'>
      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
      cVw0SAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Most win by Team' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Player of Match' width='192'>
      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
      pt1Xrygv+V+mVbyMQHzz/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Players with Highest Runs' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stadiumwise win' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d7Qk132Y+VV1V+ec+/XL88LkjBlkAgIBEKJFU4mm7RWtQNmiVntW1lrr
      cHRk+nhtr4+1a/lIWp3jI9HiUrbIVaJEMAAggRkMZgaTw5sX5uXcOXdXdazePx4wmDfdgwmY
      eRNef3913eobuvr+6oZfuEKj0WjQps0mRXzQDWjT5kHSFoA2m5q2ALTZ1Givv4hEEvz3t8fJ
      lVW++NoBFq7OcGwyid1m4Rd/Yj9nz4zSOTjA1ZExzi/m6Qh6+PJru9A3Svyb/3aSCgAiv/kL
      L+DQtqyPf/aHb/I7X3nl2rVaKvKvv3EKFfjMp3bz3JDnvv3YNm1u5LoRQOU/f+sUn/2xffzW
      P3yaoFVHJJ7hp147zC6PyDujESLxDLlSjZVImp//mecxyinOLeRAa+Rf//KPkZNL/LtffgEh
      l+Hff/0I/+Gbp8iVa3zjb97nt792hKvRIgCR1SjfOjEHQCKRpSwZ+MWfOMiz7c7fZoP5SABq
      JXIY6dJX+ae/9wPeuZoA4OvfPsEbE2kOD6zvnG8eH2UkLNPpNjYVKogig10esvEEV5bSnJ9N
      0uV3YJREqJT5ve+O8tLeLgAko4l9XTa++d1T/MXp5fv4U9u0aeYjAdAa6TFV+P5EmmeGvdeS
      f/bTu9EJDURBWJdxS7eP3/qlT9Nt1zUVem5klmRVg9eqh1qDV5/dipzJ8P50EjQavCaRxaQM
      QKFUoSfoYkvARl4u36ef2aZNazRf/epXv7r2UeDAthAr4SSqzsiz2zuw6DV0hXw8PeDiaqRI
      n89CwOvAbtCya6gTt7l5oj/Y6cbrNBNO5Bjo9tIbdJJOZdFbLLx6oAe9pOVnP7WVK/MptnTY
      0YgwPhtDa7Hyd5/sRxKFpjLbtLlfCG1FWJvNTHsbtM2mpi0AbTY1bQFos6lpC0CbTc21bZxU
      KkUqlXqQbWnTZsNpjwBtNjVtAWizqWkpAJHlOeaWo9euM5k0kXC4ZQHhhWnmV+IcPXrkYyu6
      euUix0+du3adz+eb6w1H1pd9w3UrGjWZE8dPshqPEQknP2pzOn3LvG3aXFOEXb8GOPb2GyiY
      6PJ7qRTTzCfydDj0NAxG8rE8emro+gbY2uEjmUhSVVJMLKTx6UtEKjoG/Xbm0jV2+F1kakU8
      vh5SK9NE8zVcWpnZrIYnBhx8542T7Nh7kHJZoS9oZzVVxqIpU6/XmYoqdBhqdHcH0TssTKzW
      EHJhjFYXpcQsGm+AWt7E87vszNUcqEqS8MwiNpuJY2fHObi7D4PBwPnL83z5V75Es8FGmzY3
      EYBYLA40SMXCCAYHJTlDT1c3CA0WZqZw2AP4B3qo5PPUa3WK2TSi2UwpFaesMRJemOXA3p1c
      Hl9g245hPE4H6XSGalkhn8+Ql0ug1VPN5fB29WI3G5CzCRJFlZ4OH8VsgnihTk/QSSGXY2ll
      heDAbpx6AIHw8jw6mxWXLYTTIXHx7BmcoR7sRgv59CpLkTy9PR5KSpV4WubAE3u4iXV2m01O
      SwFo02az0HINcPq9d5iYXVyXlk5n1l1fOHOSWCoHwNzkGKOTs+vuJ+KxlhUqSqlleikd4/ip
      U+SU2tr3Ssr6+uPLxNPy+rRYgtp11+VinrK6vtyF6XGuzi61qFGlpLStTzc7LWcGXmeQYH+Q
      //FHf8jA3kNURSNqZpXtB54kH18l2D9ELpchUJHJKSYymQw6R4DJscsIgkQsGUeyuUnFVslV
      JepyAp1Wy2qmQlUuMjTYTb4MmkoOi7cTq17CXK2w4/AhFi+e5viJEQZ39tPf1cMb33+Hn/uV
      LxNLFaFRYOFqArMnwIUjb9Gz/Rl8ZQWTKDBy7hTDg3vJ1q6iapz0+0xURDOKUkI0Wzh14igW
      q51UrojBYMYgVVmKlNGrKXY/9TJee7NfQ5vHn5YjgMFsQlBydAwOozPaKeWzdIY6kJUyvQND
      6MUadpsHRV57IxsMhrXCBAGlUKCOiNlsvlZed/8QOr0ej9dDT8h3LT3UO4BXKpOsiGgNIpdP
      nUKnszI81IO3owc5l2d4qAelBun4KolskVDvAA5NmY7BYRC0+EwNlpMV/D4X6XQBp9dHPpvB
      4Qnic9nQ6XTIiowsy2jEtZ+r0ZvZtXsfHruRoN9Hqr1jtGm552uAslJCMhpuW8EQi0TxBvzc
      rRdAMhbB7g2gvUUBSknBaGi/5dusp2U/nbhynrGpuXVp6Uwaanli6eY5fDGT4PTpC+RLCvoP
      On/phjl8K5SSgu8TdH4At+/WnR9od/42LWm5BsimM9T0Au+/dxSjxUpdNFJILBHocBKOC/zF
      6BjPP7eHRCKNy9tByGVCpcHFU8fp7OrhB28cZ9uOTrwOF0ffu8DzLz5JIprA5vIwffE9uvp2
      U1LLVBoq2wa34nS4sZr1G/3b27RpLQA9A9sIBINEImHSsTAKoDfoETUGTCaBAwf2YHf7cbt9
      CICk09AoK/g6u8nnigz39RDoClHNK+w/uA+bzY3b4QZBpdw7jN/lwhGwsZKWEdoekG0eIG09
      QJtNTcs1QC4V5YPteHKpGJfHp9bdL2TiJDLFmxTZIBMPc+rU+XV79Gq5eK3M22XkwhmK5Ztl
      qpFMZprSisXWe/u5FrZHH+ZRbrNhpVKpSY9xo74CALXMudNnKdVuz91aLStN+ouWNKrkc631
      KG3ujtYWAoUIEdFPnwOSuSKOWpHx+Tm0SJTSUVYjEbp7+llaErDr61RULZlMGpPNxVDAxNh8
      Cg0Qj8fRa1RmJqbxO7Sk9L2UMxFCHjO1hpZ4pkA+tkT/4DYi8TRdATupQp2Q34XN5cZqdzE1
      MYZOqKFTC8yrnXRoM/h7hmlkw0xnaii5OAlZxaqpYnRbWBwvMLwzSDwZw2x3UQjHKIoSfpcV
      rVrh0sQ8oYCDZLbCvh39nD7zHgZTP2W1iJJYpndoG9FUHp9Fg9bqIr68TDpXoGfLEGK9TANQ
      KwUqoplaIU5DrKMzdZLNpwk5jSRklb1bbDiD/Zw6cZJQZwA5k8bidBOLRtCbbDisBtSyjKQ3
      k66oDNtE0s4+qisTYLSTWl7E393D5NwS2wZ7oSGQT0bQaLSYOwawbmQPecxpOQLEolHm5ufJ
      5/NU5Bw5ycrCxZOMTs5htNkZ3roDtSoTTyRoiDoMBh0Bvx+bUYfB1UnQtiZXxXSE1USGdCpH
      JpshkYhRiCfIVAXEapYfvHMMn9dLIhlHSceJyg12bPFz7vIkWgGmJq6AVsPZ998nkVXQUuXs
      ++8zNTPP/OoqiYUZCqqEw6Tn4vnTXJ6Ywu4wcub8OPnoCnNLKyjFAmfOXyYUChFPJKgV4sRk
      DU6rgWouQV4ViUeW+ME7x/D6fNc+JyIrTI9d5o133sNgstIQBHr7eoE1PYJBqpJK5hGpsry0
      xJG3jpJnrS0AY2OTBPw++oI23vjhu8yH0/gDfpw2I6WywntH32J28iruzj6gzsXzFzn53lFm
      ro5z4tQxTo/MEU+mWJy5yoXRq7x39C0isoi3RSiaNnfPBqwBamTSCg7n7b23lFyKdFmgw+u8
      q9rKxQzxfJ3OgPuu8j8s5NMxxudjHNq380E35bGm5QgQX10gnMheu04mk62+dptoW3b+otx6
      DWG0uejwOqnIOVZi6wXyVrqFklJCb3bcl86fS0ZJ5dbql4s3W/98HCpy8da6kQ+xOn0c2reT
      mqJQA+LhRYq3tVBocye0HE91RhOR1TBBj51KNsy5sVX29hfI17R0eS1cmFjg8P6dXDh9Gk+o
      k9VIkoBDj4KReiHOciTBwJYB5JrAroEQp8+NEAz5iMSzhFxmFMFIMblIZ+8wsUgcSadhZGSc
      7du3YHYECPmcnDlzCpPJT7WSJZmQcZkgkq2wZ6ibSxPz9Pb1IFHn7OmTPP3SZzj+xg/whEJo
      DRbcJgGMbvTIzC2GMdlcGFHQmmxE4zlqSpzerftRCwkEnQ692UEllSMmyxiRMdu9pPIyJkoY
      LU5SxRKxhUl6hvaglgwkkjF8eoXzGReduhxWp5flaJIut5nFcAKby0s1H2Ng1yHMOpErF89g
      8fqRY3nylTI9W7qRBIFUbAWTyUaiVIdCnIFdh0gsTSIY7cTmZ/GFupi6eIUDf/cznD59hqHt
      ZUS9GTmxTDiRYmh4mPBqjK7uEEqhQKak8sSe7Rvdhx5proVGVBQFRVl7Q733zo9wBbvQa0Vm
      p2fIpyIodZgLJ3HqavzNd97h4LOHeP9H36estVLOF6hUFQpyFbvTgVWvRWjUOT0yxXDQynf+
      9i/RBnbR4dQzO3aBqdU0gYCf6fFxnFYNY0tpfBYdSiFDSmngtBrR6Aw4TAaKKtiMEoloFEFn
      RFArpGMrRLMKi4th/B4r7kA3Sj6ByRHAZpQ4fextypIdi1GHxWxBL2mJRFYoVyuMnrtE79Yh
      zGYb6ZVpVpMp5mdnicUVrA4z2WSYRHSVkZlVdLUsxarK5YlZDuzbg5yKMDG7itNupivoYTFV
      5tzbr1NG5NTx8/Rt34rdYkHSCoxfPI3O2oHTZWFybBRBq0WOxTlx8hihwSFiiQKnj34XjUZP
      x/b9jB5/C0doiNFTR1hNF+nrHWZlbhy1KhIcHsBmMLJ09SJTqxHEioDL66ZSkFEqeeJFLXsG
      fHz3zePs27+r7ed6B3ziNUA6k8bpuIv5ulpmdiFOf1/n+uRSnlzdgMMs3XmZDxmpVAqXy0U6
      k8HpcFxLT4QXkexB7KZH/zc+6rQVYW02NS3XANHleQS9hVQmT8BpJCVXWBgbY/eTT1NKrbJa
      BKteR1enHxp1Th87Qe+OXdj1ArmyiE4tIlo82Iw6yuUyeoOebC5FNp6me2gb5UwUBSPaWhar
      r5f56SsIqkh3VwfLiTy6WhF35xZq+ThKTeD1v/4uX/rKzzM5MsGO3ds59qM32bn/CbL5ElK9
      gNkTJDq/hEavY8vQ4G0Zx7VpAzcZAS5dukyjVkEStFRNRsxaLSIqZblIyKXlbNRAp6ZIVi+h
      LVewW8xUqhUEUYNWK1FSFOqATa9jNbyCNdCFRo2jUQNIegP5/FrEiQawb+9ezh/5a/Tde1id
      DeNw29HWsnhCwyRjawdm2O0OujxGfvj2EXqf+km0+QWSq0vIGLFJNXK1Eh1mL3WhgbF3H32O
      lr+1TZsmWgrA9SNAT1cQGpCJh9E7/Dj0DbJyhWgyi9eioaDq0dWKSDYPZoMWEDj25nfwbz3M
      rl4PuVKdhiqi09UQBSMCDZR8EgUjTpsBo8FIUS6wNL9IKOQnmi4hlDMEerdSya6NFE6rEaNB
      y9Xxq3Ru2UYhsYTGYCGWzGLR1jG7vZi0OhAa5MsqvtvUObRp014DtNnUtNwGnR6/xNjsKt2d
      QcYunGI6nMZlt1CtVoktL1BCx/LcJHqjmbmFFarFNIlUlEujqzh0OU6PxaGcQqPVcXV6HqNW
      ZW5xiUKpRnx1AZPdQzq6SLGmJRuNYHRYuToyQi0bI17XEosmMOklqrUqCzPTSCYL2VSC+fkl
      PD4vk6OXMTk8lPNJwskC4eUljAaJ2fkFMnkZJRtHUSWWpifQm61MT89iNpuoV6uIjSoT04tE
      l2coqTpSkSU0Wh0NalyamMFl0nL0xHn6e7uYGL+KwaBldmEVTV3h/OgkjVIerU5PJJEhGV5E
      ozOwsBzBbhT5w6//GR1OMw1JRzSWwqGrcer0CKlqnfTqEnaPj5XZq1RFPclonGIhSaWhJ7ww
      yfJyHLvdjKzIzM7Mcn5kHINQoa4xYdS3d4vuFy0FoJDNUhE0dPi9mC0WZmbnUetlorEE1bpK
      amEEjd3Ne8cvI5dktBoVrUGD1Rgk5NdS0bi4dOpdirLC4sQsqtOOVm0gCCqZ2DKSJUAkvEI+
      m6JYkukIuEgnCyxNT1LRmZgaH0UvNSgkVzg7skAmk6Un5GHy6gKB3k6mRy6RKqrkchncjSIl
      k8TZS2FcVgmNIFCtNUgnF0mshpmejNLhcRAuZEhnCxipMRtOYrNaaKg58jmYv3yCqkZlMS+h
      FrO4nTbM1SRHL8+SU1RsZi2ZbB6bRUc+XyY1fwnZugUlPsfo2FXSSpnhwSG8LjvpbJbM6iSK
      ECBoLLCQgL7tXSyNXsES6KWQzZBKLCHLUFSK5BOT1DRBcvOTVMQyo6t59u8YRkOdfDZDXZRw
      2ttTuvtFy10gtaHS2dFJPp9HqFfp7unDaYSyaGLkxA/p3XWQCyeO8MKP/wzJaASnRYPZHSId
      i4ChF7G0wL59+7C4vNidXnq6utEACFBXZNxOE9qKE4xubAYNIBKNxjnw4qcpV8rYjSZEOUnH
      1kMcEK/g6ujDZjPg7/Bi0mgJdPcRDHVCVSZZVFGzKT797E5EAWjAxJWLdA/vwWhcxOPyYzEb
      0MeXwdSB2dLA66rQ2x2kAUTUBQZf+RwLMzM8tb0bvSqzmiphCHSyq79ER98geq1AIR2nJJjQ
      i0ncgy+iMVhZVlwM79zH7OJa2MhAIIDUqGEdGEQnmUFTZs8eiC3HcPg7cJo0LKRibNm5D4NG
      Qya5imQdIhVeoPeFZ1hcXOHJrSGWVmMgiNhtNmw2Mzmlhs3YNoK7H7TXAG02NS215u++8V3G
      ZscIhwvXpVY4+e4xoh8Ew7qeSGR94Nzxy+eZvCGwVsvvl9KkS60D5bZpsxG0HAHmRicI7ghw
      5DunkfRars4u8+Vf+Tkmzp3GIDSYzSvoVS2Ti2H2D/qpIaE1O4hOnmPnc58jvTiK1e1kdjpC
      tVRix0AvEVWhmJRxGgXKooGFK2fw+T2ogf0EhVWWUg0M9RKVWoOnfvyVttNHmw2h5cTS4fWg
      xcDhZ59GycSwON2I1KjVRfRmkUZRpL/Xh9XpZKAnBMLaItqm3YVZr8E+tB2nw0Y+mcXl6WVp
      KcLA7q0YuiARXkbVWzHuPojX5yaRV/F6ByhV5vAEduC2GduBbNtsGO01QJtNTcuX7dTYZRSM
      7N4+uC49HAkTDASvXd9o5Xj+1HFEi4e9O4aBtUMqHE7ntc8arQar1dZU3/ziAr3dQSLhPIGg
      m3Q6g9N5c3uGcCRCMOAjn1ewWtdCMF48e4Ka5ODgHdjDT01NoaVKWgGzWCFRrLOlu4N0PEy6
      JOB1mhkcHPqgvkDLMuamxshWRKrZGO5gN8l4FKfbT6laZefWQU4dP4LRFWL3tkGo5UkrRpxW
      LZFImMB1z7LNg6GlANQEPaV8inOn3kMQRE5emeOZ3f0U6hKZTIpKPsHRY6fp232YIa+RHxw7
      wxe+9GWUYhZR6+S9d95EkEykCyV05QQVvQ9QGejxEV4K47IILOYF3A4Ppy9e5uVPHQJUMvMT
      XBrJIgs2tnq0vHn8PPueOESXqcqV1QJOm4NETsGjKxNN+iESI6LVsG3r4bWQjHqRIz98A73J
      TF00IpTSSEZIl3zU4pcw+4MU4gUaejNPvvwy1XodtSFQLeUpiSpFuUapVKJUKiGKZgRRA4As
      y4yOTyCqkEtHELUCJ0+N8LkvfAmL1Y5BgKJkolpRcNptBEOdxCNrEalLpRJStcZffOO/Yvf7
      aZj60ZcimBwORsanePnF5zfqv27TgpYCYDWIyFUrW7qD1JQCVa0Zm1mDQWOhko9htPp46umn
      8HZugVqZQwcPYNWJ7Nj3NEpJIasrY3R3Yo2vIokedDYvxUwCjydAtVTC7fHS7fSQjqU4dGAP
      Xo8H0OLp7CbktJDNVSiVihw6eICunh46HVocfVryyRw2u0xXhxcaNYr1CuGsis9txL5zHw6n
      k0yXn2xyzYbo0nvn6Nm1n0Pbt7M6V8NoteLc5qCGFoMIWlHEbpLIyFW6+7sJlhU0OgN2pxOn
      w8Hk1CT1cpFsoYTXKhHL1xjesRcaVWjocVh1LE+uINp8NJQEbo+XidlVJP0KCwuLeIM9OBwO
      DBYTQzv24/R7SKUqaK0uLJ5OBgba59Y8aDb1GkBRZAxG001jk8qKgsnYjin6OHPT4Ljj0/PX
      rq8P/vRhINwqADXyuY9z9G5w4dQx0sUqsdUFTp48Q+V6v261TP4mgaw+ZGpqqiktlohfy6+U
      VfK59XqE8OIs77zz3rrAXJlMcwh048d0fqDd+TcBLadABrMTuaxw/vgPSVT0yMUinU4tOdHD
      nj4PKg1mJ0bQmY3kV3K8d/4Cz37qMLJSR68WETQa3h9d4Fd+7qfJ5gvIBZlCJkOlkGNqfh6L
      FpanJujZNkw0rJDPJjFZVOYjVWxk6RscIpJr8KnDOyhEFlnSaZmYXaTD7+fM5XGe2LuVsiKT
      i0yyUg4x3KFl5PJlGmoFb882hnr6ycgK46ePEi5LyJEI/cO9hJN5libOc/BTr+GytIPxtrnJ
      CJBJhlHKKhq9Ba/HTcjnRKO34LTokHQ6GmWFSmMtq4rI/oP7sDs89Ib8CKKARjJwYM8OqOSo
      NAykchkMBgN6g4aqIjM9t4w/6CedTIOgY/e2ASSrix3D/fh9LqoNAxU5h5IMkxHMFFJRdu7Z
      SaFQpqczgNlkIhVZIjh8ALtRBAQEBLz+AJn02jTOZDKD1ojbbsJt1yGYfGjVEgGfm3S6WZvd
      ZnPyyK4BopEo/oD/QTejzSPOIxtBo93529wLHlkBaNPmXtAWgDabmrYAtNnUtAWgzaamLQBt
      NjVtAWizqbmmB6hWq9Rqd3iIV5s2jzjXBKBNm81IewrUZlPTFoA2m5q2ALTZ1LQFoM2mpqU/
      wO/+7u+yd+/ejW7LpuHixYv8+q//OtB+1g+algKwd+9eXnjhhQ1uyuak/awfLO0pUJtNzQMR
      gFKlREIp3bPyCiWZyF0dXv0RlWqZmHz7B1k/zCTCWWYWPj7e6sJ0gnDi3v0HjyotBeDs/FV+
      5+hb/MdjR3hvJXLLQrLFLF8/8x5HV6JAg++OnOa/HD/K6zPzH3yjzL9/6/v84fvH+NPRCeLZ
      +G2Ve3vU+JMzpwkXZABOTo/w22+/Q0mF96dH+a0fvU3lhhxHr17kcmp9B0nnkxxdWrlHbbp9
      pt69is/9f/HGuQzTJ9c+v3khe9PvK8thXvtHb31smWsCUPjY7yzOJIgkPj4gAcAf/ocfsXvw
      9znwxJ/wp9+9ecDjR5WWa4CDvcNYu30UdG6eDfn4m0unWCqW6Qv00KUtcSycolRR+Nzuwwza
      zVQb0O90oALVUp4pRcOvP/0c/+W9d6lu6UUCjEY7X3nyKX7v3SOUfQMAXFqc5v1wFFVr4uUO
      B1eKAsOGGuGGiXxqmcViiSf6tpFPL7BaauB1Bvjxvi6OT41wLpHBYXFzwKUjVip9MAJ4ARh0
      WpjNFYmU63SaJKiX+Nq582QrZT49vINz4RiNRB77rn28e/USRVXg2e4uFhIRfj++xP4tO3k6
      6N2gvwA+82o/7x5ZZKWW4NXXegD41//zX3PsSo4Dr+zkZw7o+c3/4xzeAT+vDYuMvDPFV/9v
      D1/9jX3853/5Olt+4kn+6J9+k1/9g3/IH/+bN/jKLw1xbEHizT9+h5W6mbErad789qt86nPf
      Z9grsvdzB+jJRzBh51/94jfpGPIykxD58997ip/+4uu4/Sae+fw+/tkvbuUr//IlaoUy3uf3
      8cVPe/jlL3yTqdUyv/5vX0G5Oss3/nIOKejlP325h3/wv59GV1HYsivIyLkw33j97/PVL/81
      ikbL//ZvP8NLh9wb9kxvl1tPgSpFFioSv/bUs8xF16Kd7ezs53Nbepn6wIfYY7Fj160d46Oq
      dbQaDQgCWhrUPyhGUbL8PyeP4fOG+DAeg0GS6HS4yRaydPtDrCQijCVS7HGZuZKRGXY7uRBe
      BcDr8POZ3rVDtc/H0/zaU8+hUZIE/V34LE5e6++91uQBt5fZ+CqixoAA1FTwWW2ELCaWCmUO
      BH28vG0vpnoe0ezhVw4/jVevoccT4LWBPjKljZ0a+LZ1kp5aZSqlstUnQTnPu+MN3j76Jc7/
      aBS9RYdWaOCwGfh7P7eLXS8O8dXf2AfAc8938/4Px+nf08PpN6+gD/q5/kClf/5//jj7fSL5
      KvTt6+IPfuc5FheuG2H0Rn7/T34KrZLjyPcm+Nn/9QW+8sX+9eFrPiAzH+HUfJXnnvDw5381
      ic1u4ODTPUxcWfuPDr80zD//1R0cenUHX3glQDhZwe3UU22IWC0PZ8jjWwuAZEBfzfP6xBVM
      RjsAk5FljiwuE7Ktxfmcia9yOZ5kKrpCuKbBUMnyN2OX0Vk8GD4oxmi086tPPc/f2zZ0regL
      K0vUUVEbDRB1bLXpiDcMuE1m3JKIKkrs8Ky9NfrdHkRhLYpP0KDlb8dHSakSNk1zk81mJ+HY
      AgGnB4BsIcNsrkCtvvavmiSJc4sz1DQmkukoP5gcJ1Vu8Y9vFIIGp65M3WRei1OkN+Emx7/6
      Fz/CFPAQXZF57qV+xk4sopoNhC8t8f99Zw6AvU938b2vX+DwT+/l9F9e5skXe+66GYNbPfz5
      187xP/5qtuV9q9+BW1LROW28/EyAP/vTK6hqnfrNrMkKMhq/iy6nyLmx5rhMDwMtjeGOHDnC
      gcNPUBclHHodlWqFlUKBTruT8eVJlio69vm9dFgtAKSKedLltfmk22zDooGl/Nr3JVEAVJay
      ebrsawJUqpQo1MGsgXSlDvUqbpOR92bGMTk6eSrgoVIts5wv4LXYqFZLGPQmTNq13q6qdRYz
      GXw2ByatwEq2QMi+JoxZpYBGa0AuFbCZbKQKOQJ2O5FsBqOkQxU0uPQSi9kMPqsT1AqRokLA
      bCJfU7FqBeQ6uI2GGx/LPePIkSPXtj6/9+3vMbzvOSxijbKkp1GQsfodmMUa5y4l2HewA6lR
      5/yFCMFeN10BE4vTcWR0bB1Ye57nTy2yZVeI5atRggM+xLJCuiSg5ov4+70sT8ToGXQytVBk
      uNPIXLSCXaqjsZqJLKbZsTfAlYsRgk6Jb/3VJOMXltn7+UP8459aE6bl2SQ6hwWfS08uWeDK
      RJptuwOgKISzKpViiaFeG8upGi5jg5Koo54vYvU7yEfSxAoNDuz1rR1h9ZBxU70AuzgAACAA
      SURBVAG42d50NJtAEQz02iz3tCEFJc/FeIanurrQPIQP6l5y/fP9uGe90WTCGb72p2NYvDZ+
      /ud2oHvc/whusgj+OPx2z/1oBxajlWe72+fCPEgcQQe/8ZtPP+hmbChtRVibTU1bANpsam46
      BTo+dY7jU+c3si3XGO7ooqG5/ydHesxeHOLdhYM0GzwUS4k7zudzbLur+h55GjWy2RKVqoJO
      p8P+wYbIg+ZjBOA8/+n7f7SRbbnGTxx4moZ+9b7XM+zbTq+mOfz67eBzbCOWGb/jfDt7fwpw
      3VWdjzSCyJWLR1nJ6OkO6DBrJNJKHb/PSbEqYBIqSDqJmKzhqb1bN6xZ7SlQmw1CJLYcJRQy
      oDW6KCZW0EhaltN5lEKOd995k5X5aTRW34a26pa7QP3eLlxmB9FcAr2kYzq6wHNDB1lJR5mN
      L1373oC/h+nowj1tnNPowqQz47P4SRTjaEQNS+kF9oT2s5pdoVIvk5KT6/IYJRNKVb6jemo1
      lZGzYRxuI7l0ib4hFzbH7ekBEtEi0ZU8br+ZarlOZ58dQXj8tw/vhp/8n37xo4s9O9fde+ap
      Jze4NWvcUgAsBjNn50f49PancZrtzMWXkSsl3BYnL247TDiToFiWqdSrHOjZSUbO8saV9+5J
      4ySNhEEyYtVbWczM4zX7EASB5cwiVr2NXksfaqNBpV6m0WigVGWq9SpzqZk7qkejEdDpNRRy
      ZYr5yh11YLNFR6VSJxEtotEIG9r5VVVFFNuD+CfhlgIQzsQ42LeLC4tjSBqJulpHbagUSjIj
      y5Nk5Ty9nhBXI3Nk5Tzl2o22l3dPsVJAEATGY1k0gpZyrYzaUPFZAyylF4jmw1j0NgxaA0l5
      bUGqEVvYRtwC9QNdvttrom/IxZ0EiqlW60g6DaEeG/V6g0ajsWFC0I5o88m5pQDE8yni+fU7
      JRcWxtZdX42s2aVEsvF72DQoVooUK812/lfCl659LlQ+3uz3dtBoRXbsa30O8K2wOQzs3H93
      eds8eG5LE7yvZzsXFsbY37ODaDaBQaenWqvS7e7gxPT5NWO2+0SfawtzqRmcJjc0GlgNNiq1
      CjaDndXsMoXKJ98urVTqlJQquXQJi02Pw2WkXKqhN9z68eSzZeanUgzt9KI3aCkWKpgtG3P8
      aT6f58KFC1gsFlZXV9FqtZjN5ofGtOJR4Jb/8HCgD4O0ZsBsNZhxWezU6nXKtQomvZGQM8BS
      KnxfGmfV23CZPcylZkjLSTrsncgVGY/FS1bJ4DK774kASJLIpVNxrHY9tarKu2/M4vaZ6el3
      MDWeoLvfSaVco1ZTsdr19A58tI1ZyJep11VWF3NcPhvm4DOdLEyn0Ru0zE2m2LHfT7DT9onb
      2Aqr1YrP56NYLOLz+fB4PJw//2B0N48qtxSABuC3uel0BkgVM2hEDR6Lk0Ktiqqq93zacz0a
      UYMkagnZO6nUK/gsfrJKhkqtjNfsYzW3fE/qEQQBvUGLwajFZNER7LJhseoQRAFJp6FeWzOV
      DoSabZX0Bi2BThuFXJlAyEqj0cAbMKOqDVweI7Xq/TOzzmQyxONxtm/fTj6fR1VVXnnllftW
      3+PILQVgMjLHZGQOg6RnOX2v3Bhvj4yS5v2F4+g0Oir1CvFC7L7VtfuJ4LXPvuBHlq6hno/X
      WLo8pg++aGXgBiWvv+P+GvdJBjPu7u1EC4BgBQ2kFXA64ezZs/T393Py5EmCwSCLi4u89NJL
      WK1tg8PruW1r0FL11v6j94tK/d7tLN1rCvkyc5Mptu/xI2oEZq+m0GpFDCYtqbhMZ68Dq/32
      ziRW8mnKghGH5fZ0EHPhNL/9taPr0nb2+fh3v/xjdHd3UywW6evr48KFC7z22musrq4yPDx8
      x7/xcaa9ifwJMZl1KMUqdbXB0myGarVOo9Egly5hcxhIxG4/WoVGhG9/8+vMhW/uFH+7zM/P
      k0wmSSQSvPjii5w5c4b+/v5PXO7jxsPpqPkIkc+W0em1RJbzIEAmqeBwGTEYtcTChVtOodaV
      lcyw/cA+pOuUW5cvj7BzsJMLE4vodTqqisLWffsx3kLdcejQoXXXHR0d1z6/8847yLJMZ2cn
      sViMl19++bbb+LjRFoBPiN1pYO/hjmvbpt39zmv3egfvrCy9UQeNBqr60cLZ6/WiVst4O0Ks
      zs3T1+GiXG+gQ133vQ9pNBrUajXems4SK6w/8OTTAzb8FonBwUHefPNNurq6OHDgwKY+GKUt
      APeI29EZ3Ao5nUQpl8kWPlrzlOUsScmPtlbg0KG9hCMJ/DoB0LQ0gxAEAa1W21IbrdFort17
      5ZVXSCQShMNhXK5NaJ36AW0BeIjwDe3GIqeRix/Nb3q3fLhodQAQ6vhkWudGKYdfXTM1D7gB
      qtRjE2h8W6lUKnzrW99i9+7dHDt2jF/7tV+7lm92dpZ4PI7RaEQURXbu3Nm6gkeMtgA8RGQj
      K0xHVvAH75/TTD1+FeUvfmFdmqbzCUw/+9+o1WqYTCZGR0ep1+tkMhkcjjXBi0ajJJNJnnrq
      KeLx+6f72WhuKgBdriBPD+zfyLZcY2tgC6rkuO/1dDt6IH93DjH3A41YY2VpGZNj4IHUbzKZ
      6OvrY9u2bVSrVWy2jzTYer0eSZI4c+YMXV1dD6R994ObCsBSKsyJ6QejVnfbDRviEQbQe+fG
      o/cNJZMlmkjSW64+mAbkw+zvc0IpghEgnQRLACQj+/e3fhlWKhXeffdd9Ho92WyWV155BZ1u
      Y2yh7gXtKdBDhLO7jy1LcULB+2M7dEumvw+Z+fVpe3+B+QZ848wfr0vucfXxpSd+CZ1Oh9fr
      JRAIcO7cOYrF4uMnAF6r85oN0JWVtSmDUWdAqazF0DTrjQgIFMoyVoOZuqoiVz55qHGLzkK3
      s4/pxCR+a4ClzAIOoxOzzkKulKVQztPgcbGJr3L0O69T8fc+6IY0IVeKjEev3PS+1+tFr9ej
      1+sxmUwb2LJPzi0FoMsVpNcTolSt4LO5GF2Z5kDfTnQaLQ3gzOwIA74eGjQoVys4TDaMOgNL
      qTAOoxWlWkYrapArJaZjd+YyadKZmYxP0O3swWF0kpQT2A0OrHordoODqlrForMgV4pIGh3l
      WoltgZ1MRMfIKClihejdPpcHgMSuffsQ/B7i0Txum/FBN+i2+VDJ9tJLL61LP336NJIkoaoq
      S0tLfP7zn38QzftYbikAfd5O/DY34Uwcg6RHFAX8NjeSRmJHaIDRlSk0ooZCWcasW7NhMUg6
      dnUOEXIGODL+PvWGyt7ubXcsANV6lWHfNuRKkVK1hMPopFDOU66VcJk8NBoN5GqRhJxAYM0f
      eC45Q6Gcf8Q6/xqOYJDzV8bYvuvgg27KbfOtma+xXJxfl/aF/l+gy9JHOp0mlUrx9NNP09Nz
      90F77ye3FIB3r55pSvvupSMAfPv82kEN5xdGb1nR6Mqd77aklRRppXXcnki+tQ/CUubeOuZv
      JCfffAvZ5SSdlbGZHo64OZ+EZ599lsXFRZxO57odpYeJh94YzmFcMy0wSSZcJg99ri0ErB34
      LAGM0qM137wVW7cPszIzRSb/4Cxv7xXVco5SdgyfvUC1cJXk6hlyiYlr948ePcrU1BTf+973
      yOVyD6ydtxwB/DY3B/t28d1LR/gnL3yR1UyUuqpSU+sc6NnBfz3yLZLFzH1pnEVvZdC7lTOL
      J/FbgwiCyHJmEY/Fy7BnG6ORy3ccAuVhxtXZSU9nHz6P+UE35ROTS17l9Ou/tC7NFTzI4Z/4
      GgA6nY5EIoEsy1SrD2jbl9sQgJAzgNNkx2GycmL6PBa9CY/VxUo6ysXF8XsaBaKpcaIWjSAS
      sndSU2sYJSNOk5PV7DJ2gwNJI926kEeI9PIiot2DQXqIlBP3CY/Hg8PhQKPRPFBbpFsKwPmF
      Uc4vjOK1uhhZnlx379LSxE1y3Rtu9Ai7no/blrsTng3uvqt8Oq2JivHO89osfhK0fuNpDQYa
      1fR9DTLwMKCWE/QFVCCFc5udemESjbELQbvxU9rbVoTdGBplI7mfHmHO8p0F0bpGGe5moiLV
      twGt3BLLZIoSzz37JLfnP/boUk2doBz523VppoHfRGvdeG+1h34RvHnQsbo4xltvvkk8c+O6
      RuXq6AiZdIrRienHRvX3MNA2hWDNieSd91fo67ThtOs5Pxpn7zYPrhvigy6s5An6TCTSJexW
      HZJWRHfP5usCQ/1djIQTrMYKeB3XTQdUhYJcpx7P0OfSkyw1cEof7xDTKmpcvV5HVes3zaNp
      NLjRi6Cuqh+bp2U96se3rdU9Va0/EMectgAApXIdm0VHPK2QK1YY7HUwNp3mB8cWeenpTmJJ
      GbfDQLmiMrucI5qQsVl0mAxaQn4zg733xnLV2z+MNV1muH/9GcVqXYPFZkCnhalIju1eAY1w
      dw4xYovQkR/moVUeUfzYPC3rEcWPbVu9xT1RXHPW2WjaAgAYDVrqagOHVUdfl43j5yJ0+Ey8
      cLiDwR47OwfXdinmlnO4HQZ2D7tJZkqYDFo6A/fusMDpkTHsPisrKym29Hx0qLQoGRge3riY
      +ZuJtgB8wOE9/mufX3wyBMDwdf69AF7XR/Y57tsMn34nCEKVM6dneOXVz97zstu0pi0AQF1t
      cPxcmK39DvQ6DeG4jMmgJZlZs3at1Rs8sev+H9xglrS4g51oHsYDdTeIubk5ZmZm0Ov12Gw2
      9uzZc1/reygFwCSZ6PRtv+/1dDt6gFU0ooDJoCWbX5v/r8aKpHNlBEFg2xYns4ufPE7P7eDo
      7seTu0J58wZpwGKx0NnZST6fZ25u7sEJwI6ufr7w9Es3u31f6fcFGIndm0M2bokXKtU6cqlG
      XW2wuJpnfCZNT8hGUa6yHCk0TYXuJ4IGijkZXI+OOfS9JBwOI8syFouF3bvvTkl5J9xUACK5
      GBeW7o229U4x6TdWPaGTNDz/RAdyqYbJoKX7Psf0vBmVXIaMXMYtPZQD84awEZ3+eh7qJ+0y
      ufFbg1Rqa9aRs8lpDnU/RUpOUm/U0QgayvUyRq2RWCGKIIgYJQMZJd3yYI1bYboHsX0+CapG
      RFNXkQyPjkvhveTy6gr/4jvfXpe2K9jBf/zcT963Om/5j+8KbcVtdhHORjHpjFxaHuPF4aeZ
      js3T7QpxcekKHY4Ai6kV3BYnRslITa0hVxRUVSVeSN6qipuSkpN4zD7UhopRMtL4wAGyVCvR
      4+ojV8qyEl9iW2AXVbWK1+Ijmg/jNLlvWwBE89Bdt+9uECQ30Mq0o8TYdJyDO3uYSRbodG/O
      KdBGc1uvPJ1GQqeR0IoajJKBicgMQbuPaC7O7s7t+K0eTDojuVIenVZCqIHP4sZrdfP21eOf
      qIHzqVlgTYkiCiIXV85RrVcQBZF4MYZFb2MiegWdRk+2lCFfurMDM9Ti5K2/dA9pWIZobQtk
      oK/byXS8yt6d3hb3NzeNRoPXX3+d559/ntdff53Pfvaz12IWraysXItjdKdBu24pAFPROaZi
      a2eAbfH0IlcUvFYX07E5lGqJSC5Gwu5nMbWC2lARBBEaDRwmG9H8nZ+kfiOVernl9UJ6rU3y
      B2/6Inc+5XnY6OjeQsetv7YpEQSB/v5+JEnC4/FQqXw0ioZCIUZHRwmFQuuCdjUaDd5++212
      797N8ePHefXVVzEa10bWlZUVcrncrQWgVPuoA46GrwIwn/zoZJZyrUKu1HxQXST3yaOHmXRm
      Bj3DjEVHcJu8BGxBUnISURCxGxzMJqfJl++NN1EsKeN1GYnEZYwGLZIkEk0oCAL0fXDEUVGp
      YjY+Xj4IjwqqqpJMJpEkCbvdjtf70Sg5Pz/P1NQUS0tL64J2CYJAIBAgHA7zzDPPEIvFrvkm
      h0IhMpnMrQVAK2o51LuXE7Nn2dkxzHRsnoO9e1jNRPFZPVxeGbsnIVBaoVRkREFEQCRWiCBp
      JJSqgsPopKbWMOvM90wArkylGOyx894HZhBBn5l6XSWVKVOpqkhakTMjMQ7v8bG4WsDnNpIr
      VLCYJMxGiZ4Wxye1uXfEiwV6du0AIOh1s5hJ4bfYMEgSvb299Pb2NuVRVZXFxUUGBwe5cOHC
      uqgV8/PzrKys3FoAnuo/gPMDB+1YPolGo6FWr+EyOzBIerR3cS7v7WLRWynVSvisa2eDrWSX
      6HH2IVeLaAQRpXpvBK9UrhFLKAiCgNOmp/LBuV6RhEKhWGV2KYdWK7J3m4ersxnePrnMT726
      BZtFx1vHl9g55GoLwH3mh5PjLGbW+6T8g/2HCGbzpP/fb6xL1/X04PxHX0IURV577TUABgbW
      h5v8UGhuKQDHpk/hsbjocYWwGqyUqiXKtQqJQgps3FeXyHw51+T5daenwN8OBr2WL/6d5mD+
      Qy2sPLdtcfLqc93rrjeKfDrO7GKU7bt3Im1ea4l1qLJMeWy89c3vvQ6RG6KHvPZZZotF/ugP
      fh+4zV2gRCFFq+XsUnpj4ne2WSNbLDMYtJOtgOdxdxvbINoeYY8QfreduXQFd7vz3zMeak1w
      m/VIRis7htfOIq6rKh6bkS+8sP4sAZ/TTK1Wo8+pw2da//catdAw+9Ee+ifr0gVbiFqthuDb
      DbbudffQ2XCJej6/82fXJXstPmq1GtvsuwkZ1+exaGxoTRr69/7j9fVbO9bqMQ2g9a03+W5o
      HHhMer6478C6dL/FSq1WY4c/SKd9/ZTUIukQXC4sP7k+5KLW612rp38L+Pzr7jWMJmxaiRde
      XjtPWWi08Gk7cuQIM1KYPz7+Zzfe2hCeGdhNonz/4/YP+7bzv3g3dhon+f8OJ8atvPDCC8Da
      s/7w852iqmpLz6ubpT/MeR5U/e0p0CPMtT+ynOb46cvMLS6vTweWlmZ599j7d5QHQFaU5jyV
      ApdHJ1hciXzieiolmcuXL3N1aqaprJXlZSYuvU84W266N3buFBcmbj9PWS7w/qlTjE9Ot8xz
      0ynQvq6d/NIzf/9mt+8rXS4/cu3+2oEDeMxeJPOdmU58UjTmIaB1XNO7RmfBoqN1aPJKBaPZ
      SEGpYDFeZ2SnkfC4Xfjctx+UKpZModdq0enWKwPLcoFCNo/D42nKE08XMesaGAzrPeh0BhMd
      AR/lZn97dEIDV2gAu7nZKFAwmPDYmn/nzfLoTRacdite3w0OTfUqlVLx5gKwv3sX+7t33ex2
      m0/EPRaAcp5iVWzqZAByRUWrFVldmmdo6DrDP0FPo1qg1mgWgLErl3H5OjAZ1xvk+VxWjp09
      zfBAPwHvRz7LepMFv8fJbKw5TKXN7qBcA3ML4UyvTpNuWAkF1x/8Z7WZWYhksNmdwHo9kyzL
      uP3Nv9NqMzOznGiZR63XqdVukDSNhN8faE+BHgt0Vqx6lWKxWTFos1nx+/zrOz9AvcjMSopo
      uHkN5LKbuTo915QuVwW2dPoQNc3KT6Ukt6xfr9OxFmylOXyKM9iHw+FuSk+msmQi00Tzza5x
      AX+AarVZ95SMJzGIJZLF5iEll8sSTzSb5uRyhbYAPBbUZPJlqJSbO2BJUajXmztFKlfCa2pg
      sjV3wHw2QabQ3MlMBj1mmwu3szl0u8XupbfDRbV+Y8wfARp1RM36yUZJLnB1ZoFCLt1UltNh
      IVfSYKA5SrasKMhK80hjtpqJJBVc5vXC2Wg08LrdGE3NcfzC0dW2ADwOlOsauoOu5iCz9SoW
      u7Nl7B6X1YDe5m/qgEoujWTxM9zfwi61UadYlDEYm30VGqqKZDCRTd/QoetFLk8us7q8tC7Z
      YLLQ47Oi1zcrNVKpHAPdXkZn1ucpl8s4HDZMxhZBKTUGnnzqMMYbApVVq1VKSpFkIkn9hkGo
      o6OjLQCPA8XUCsvxIktL6zuMUlLIZjIo5ea3eVnV4rTqCN4w/16NxYnF4+RzLQIBiLq1AGLx
      ZienSDRGNBLG41k/onzcSGNyeLFYmw/OMFvMuLu38mNP7FiXXi0r1BsiiWSzXUKjXmJ6epZS
      df1op9PpUDV6tPIqi8nS+nr0+rYi7HHA1TGAMXIej299cFmNRouo1WIyNy9AV5ZXKNfqmG3r
      bZm2DAyxBT4mZr+A1bo+GFhDraHRaLGZmg0C1400/vV1RcIRPMHmo5MMBh2nT51gzxPP4DB/
      tONksTmw2CAQCDTlEVSVFhtKAAQCQVw7diLeMBIWisX2CPBYUM5SVI0Y9OvfZzqDCb0k4fM2
      b0/WVZVaXUWva/ZvGL9yljffPtGUfmV0FKVSw+9Z35FnZ2bocBvJVFq8TyUzBknA5242GrQZ
      Rarl5vl8NJpCL5QoVNfPWW7c07+eQqnCytXzRPPNgrswN8PSSvPOm6TTtwXgcSCRq9AbcjW9
      4QA0aonL480dZnBwkOGt29Fpm7uAzRHgMy8/35TucLow6iUK8vqpRFdXF/majpCjhTN/vcxq
      JEKuxQ6R0Wyn3qILOp12QgO78VnWC5TeZMFs0KHX37ANWq9Sb2jZ/cQzBO3Na4pIPE42c+Ni
      u4EgaNoC8Djg8QXo6OjAam5enOaTYaaXY03pucgsZ69ME0s078Jo1BIjE81m5wa9HoNe3xQR
      WmcwIRdvolBU6+gNZpzO9XY8lZLM1EKEZOKG+Xy9ytLSCtVaveVBIdVKhfKN0zNBQBBqLC4s
      Uak2T4R2DA/jcN2wBqlkieZaiV+bR46yUmB5eZlcoYUiyt/H7i3B5nSPH6teg8PRvKV5M6FB
      1OJzO6g1bXWCyWBovW6QTFgNYpOOQGcw0dvVQW/vDWuAehGzt5dOu6blnn4DcDtu9NNoIIpa
      BKGVtgGUUolkLLJ+gaxz4LMJtxaA7/33b3BxfpnJ8TGy6QzjU2sHNPzoL/6KWGaZb3/nbxmZ
      jBBdXWBxNcbxkycYH7lMLJmmmMsRi64SSSSYn1lkeWGGZFammE2wsBL+/9s70yBHzvO+/9AN
      NIDGfQyAwRw7MzuzM7uzy93lkGsekkKKsRV5zZQspkpS2S7LsqmyviSyU3RSFccfIrvKipiI
      VsXlsuU4ilR22YqdOLQlpUizvAktkha53PuY+57B4B5c3WgA3fmAPQbTmN0Zanel3cW/CjVA
      3/PW+7z9HP/nefjmH32NVElj8tIFrl6dJL+Z5/LUHG/8n++QymS4Oj3Hq//7L8ls3v8J73cT
      dqHGP565xNLyqmlfuVKhXNxkc5twJDMFJEGn0aZWvyvcx3DURSrb2vxQLWY4fWESsQ3JrJha
      5M3TbVpm3SJGIcsOluZnyZa3CI7kQ6xlWclqxHxmlcrn9VIqb5sPBhgWkeMTj+NpU9vJ5/Ni
      lZym3ms2m/X2XqCBgRHCboXJVJk3v/W3HD7RS6JnmO7uOA21SPe+IcqFApOpJEZdx2qUmFyY
      xp4qkM6X8Ro5YgPd5JN2Ah4FV1Ugu7GCrjcYeWSCLrfO1Po8jbqDH1xapFJKcWRokMWrFxk6
      /iTJjVWuXD7Hh5586naP+vBC8jDSEyLcFTXtCvh9ZAoKPnerJygScHJ1IcvZS6/xqU+20onr
      DQPJ4UStlCB4c7Xt7h8m3m9QN8y2hi82yEGLuVvozMI6A/EAWFvVs6pSJpnZpKd/kKBrqyFu
      wetxU9YaNBo64jYbpVAo4BS32QCijbDPzdL8DKHeIbx2c6Ta4zF7qCql0u0FYN/hQ9h9HqKp
      K3Q/c4SCw023DFm3jWo9QNhZYODIAd59a42+g4/gtltIxdZx+QKspzcZiBymWIeDw35yqWU8
      0RgDUQ/pUgO/xwFIHJl4GgOBUa1GerNET1CmbpFIrq5w9B6XyrsfkVyeothwIqY3iIVv+tUN
      w8AwMBuNgCEFGekrMzryT0z76o06wUCQWKTVeyTW8/zNqSuMDEYZO3AzhVStlJieW6R/36D5
      PoaBINqoaq2Gs93pomEYhIPmtNOaolBtCCYboKIo9PX3oZRL5Cp1AlvyHcrlMom1ZdzRAdgi
      AEtLSzRqGnXLNuWoUaNcUW8vAC5fc0APHGyt1jx+9HriQtMnu3/kAKCiVcEX9AMGfVEvDUC2
      QbW6iez10lByVK5t09QyKfXm60ywQMTvoKbrgErI50C7tn/rcT8ukF0eXK4ffTJ8pGeYir5O
      MNxaUGtpZhrV0NEaZk5NrVpmPZEmPmC2AXbU50UnQ71dKGprYM3hdNHf34+hm+8zPDJKow03
      X1Mr+DwesvkCQX9rMEyQ7KxfuYgnFGtRW2Snk3wmyaZq0L8t2ader9E3fBCfo3X1lx0SmuTA
      LZrfWpLdtrtAWGp9GV3yEg15mZ6cZHBkhFwmR8jvZmphnbGRQdTZ/0TQZa4PtBMmFY0pZfcN
      krNVnXezO4U6zKioDZZTe0vYn17e2NPxX//0v+cTT/8MqVSKrq4u0okVDLufkMtCToFsYpmh
      A2O0Gfs7i4ZCOq8QjrROsr6BfpL5Cr2yWZeWLDVUw46zTR3SYnKByaKbvp7txrOBaBUpF7eV
      ojEa5HI5RKv5WrVqmYuXp4jv208sfHO1lxwytVqC9XzZJABW0Ua8pwfrtj4Juq6jNxq4XGYq
      hMvpJFWqmt4a4UiM6ekZQttp36INi27ssjSiw8nyeoKwrczMcoJ8WcPjdbE6P4XVZ47KPUyo
      FrO8e/YiP/2TzzI7M0OxYaMvEkQrrrFSECnrEscODt3lp7AgCpgMWkEQEWmQ2yzjcrVGb9dS
      RUYGumhs8+gYuk5s4CBCwUxEQ69Ta1g49sg2mrxgxSsLJHLmBS2fWkHRpbaCptcaHOgzc45K
      hRyGXqei6QS2mC7TMzM4bCKFUh7obTnHanegLc2ScHcxEGp9CySTa+gWwcSVkmR5d27Q93/w
      j9hlFxUcxLx2PLKTmckrWOxuVpYWdwxBPwzYSKaolnJsZDbp6e3F63WRy6RJqVZiXjt+r5nr
      cschOvC5bWaOjmijupkwkcoAHE4Hy8trSNtKsZc200zOLpDLmQ1aRAeS2N5zZDV0NhXVtN1i
      97GvO2DqPgnNuEJZMb+lHR4/8Xgch7X1rHgkBIKV7u6e1hOMBgtzM5QtUFjq3wAAD/9JREFU
      XnoC5kBYKBiia3uyjpIhq+5SBXr2YydBV8kWGhw/8SQAY2NNI+h63lahurcu36pWx6LtvhWK
      rW4Q2oOouUQDw757FQvA4tubriJbJfr3j9K/f5RsNkt0YJjegT1d4g7CzNGBJuGsRzMHqYLh
      CKqiUtvWmtQTiDDUq7ZNbimUyrhcTlRFNXmVdrpPV9DHO+fn6LNY8G47p5BcxHDHiGyjVjiE
      OmcvLnDo+InWZ/OH8LTJH6CSpiT6Qcti6EbTmNx6PbtkToix+/Db03sgwwkO2hjsNzD+zJd2
      fSmAvtsfcl/BREW+h7h4/ixFDUbDZjdoIpEkHGlDbVazvH91meF9dQLeVsHZKblFU1UymQwj
      Y9vU3oaG1hDwex2sbaSJR7estqIN2apjtZv19mDPfjY2zYtUbrOMUkiyWanhbUOXNsEVpUkc
      ba9qSpLEwuJiq6AJVmKxTkbYA4FwtJue7hhGm8SXeLx7B4+Og6effJxoxLyiVhsio/vNS5Qg
      WolGo+jbvUqiRHF9iv/3/kzr5AdmZuYIh4Ntk3KKxRy2Nt2AJFlm/8EJetuoM3tFLp1kYWm1
      be1Q6FSFeCAgSXYkScJuNxuaa2vr2Gxmxmchm+Ltt75PptC60ivFPNWajtJGnw+GI8RiMdxy
      a1zB0OuI3h5OHDJTm6/HAWrb4gA0ari8EfzbjPPrunlUbrCQ+eFrvyaSSWyShFVsP9U7+QAP
      AILhnVu4OoUal2dXTEEtr8+DbpGoq626fjqZpHdomNW53ddlmpudJRZwcjVrnk4jowfbnAGI
      NlKJVXM+wDXdPFeT6LkD9R8PHrp1s4yOADzgsNms1Nt4bbB5+PCJw9T1Vpdh39AIa2vLdMV2
      36qjr6+PbL5Aj39v0ykQCmO1bqMtXNPN7yQunj9DuZBn6NiH6HK3vg07KtADDk2QeWTErM8n
      kykuXLiIuI0gVlXK6IaAUtm9+iE5ZGKxmOktczuolYrZO3MXEAx10d3dja0Nia8jAA8wbqXP
      WwQLvb29Jv+8XXaDmmsbO7jT8Pt9bCTb0K7vMJIbCdyhOH7ZTJLrCMADjOv6fFUxU1S6AjK5
      QpX19YRpX0OQiIfMHKE7ietEvXblSu70fSJdYapae1pMRwAeYPQNjVBMrbbV56s46Q45CYfN
      HSkDgSBVtcz6xg/f520nLM1Mk8rlbpAd7xZqtRqNmkq+YA7sQUcAHmxYLMR7+gn5zXSMYi7D
      RjqHLJvTKMsVlWAoSHf07rVr7RvoxxeIsK+v5/YH/xCQJImNjSxWqX2Uv+MFekjRGtRqnQaa
      VkOp7o1Gsuf72xzEusx5Cnca1WqVfUMDNCxtEvbpCMBDi51iB/n0BppWRZDurm5+r7C8OEeh
      VKF7B5JWRwA6aEGlquFxWklpd6/7572E1+dHsDna1j+CHQTg7Nmzd/WhHnacPXv2RleYH+ex
      PrVy97v03CssLS623d62RVIHHTws6HiBOnio0VYFeuWVVzh27Ni9fpaHBmfPnuWLX/wi0Bnr
      u4XdjnFbATh27NgH7lzYwd7QGeu7j1uNcUcF6uCOYWlukjMXrpi2q6U8+aJCYnmBQkWjmEtx
      5vxlU8MKXStTVHafJnsn0HGDdkBiZQG7L0rAY44K7wX9cR+rlxQunTuN0+tldWmdkcMTOGoJ
      rqzaqSvLWBZWcFoaJPMZsEnUVZVY2EuxWMKurrFk9OM0KvidEIzvJxK4u3WX2gpAfnKF6eIZ
      DItI6FAvoaFb57vWCmXW31tAHughPOQj8c405XwVuS9C93gUqDH57XNIQRndEBh4boytCTrZ
      CwsIoTD+uDmp+0HH3/z51/kvX/0KNZuHT//iF/jM8+ZKbVuRXJrky7/7ZY6f/GV+/uRTfO0/
      vMQPphJMfPRn+bXPvQDkOfmhT9BzaARVd/IHf/g1XLdx6b/+P79J/Olf4LkJc2W3D4KV1RWc
      GYGltSru0AYha46llQYBWw450AuNEoJFZ2pmARs1tFSFjbJAb1eAxZWLlMtVDo31MzZ+Zyb/
      G9+/yLffK9AQbfzMR47w/MTNkiptBcA/2ktXNETd7iU05GP9rUkqxRquvghOm0ZmqUhD0eh+
      ahR30IFugKvLhQHoSoVS2cLwx8aZ/e5F9PEoAiA47HQdjpO6uIZh1Fl6YwqtWid8rJ/cfBZ9
      uYgo9JM6u4TFKhJ7bB9Lfz+N3S1iWCX0ikrw2BB6NkshUcTq9xGMSiSuZjBqGl0TI/hi91/0
      8vlPv0h5+TzZ4ASfOfkEX/nNX+PicoaJj36ScVeSP339PMVMgpe+9AonDvaiNSw8dnycOqCl
      Z3hnTeLPvvXf+LlP/SLVz72AHXAG47z4y5/jT/74G2iVTX7zN36dTEnjk7/0L3nr27/PF7/0
      2/zcC7/Ct//6v/KlL3+Dx6/Rcb722/+G01NrfOxTn6cx+/ecWywSHf0JXvr8v9jdP+OI8eQE
      wCDUSywna/TFA8AQ/WO7u8SJ2x+yZzz39GF00c+mK8Lzj8b4o7/4v0xlVA6PD+9CBaqqVKoi
      +3/qALOvXcY55MM72I1DVCltFHEHHdh9LlRHjhpgNAwEq9is2c7NctVGvU4lWcTqkDBqOlJA
      RlQ1lEyVwGAQIRTGFbSRsQkYgogggM3rIn6si435Ev59HpSKhmS3IUd9FFaLEA3h6uvCaa1S
      q9xd7so9QWGF8zk33/rGy3z2cy8yfvIJnv3nn+GAbYV3Tp/jxMFeegcPEAl4WAPqWhVJdoLF
      imTRqQN2oK4Uef/MWXyhLpYuvIt7+Gle/pWP8uJv/Xc+dmyUV//qb/nwM4/zv/7yO4xPnIDE
      21BN8cbbs/z0yad47buv8dyojejoCX79xRf29C/Mn3+X0sYaFkHAIghcnhavfW/+RRSb37f+
      FUUsgvXGdx0L9YZOQze2fFp/69e26bqBbjR/N7/rfGTi0M4PWClxtSzxn7/wYV76gzd2IQCS
      hKApJM4sYHU3V9jSSppSVSFwpFmGoryWobBWoGFRkf1xhGqZ9ffmEXye1pbFFgvVzTLVfJlS
      WsHhbDL0RLtIbjaBlRCS300tX6RaaW8M5edTOKK3qM9yP8MdwVWc46tffRlfvLlkvvXGd3h7
      c4mf/dXfAuD09/+O1//hNEXrEo8MfxZP7iov/8ffQR46ztb3n8UisDh7BUf0s8y9/01efmWK
      sSOPM3HUwxf+3e/x1Vd+h3/9r17id7/+P7j46tsg+eiLOqnh5JmPDMPGWR6deAyxTdeZW2H6
      e3/F+uuvItqdWB1ORIeM1enE6nRhdcqIThdW2d38uNyIsgerq/kR3V6sbg9qw0JBqVFQapSU
      GkW1+bes1iirdcpqjUq1+Vup1lC0Gmq1jqrVUKs1/m7sFkV3HDKyssmffPd93MFg+0jwqVOn
      +NDjT2AIVmxOK7pWQ9lUcYbcFGdXUapWfH0+nL6m0aQVK9SuTVjJKyNaQckrOENuBMEC6FQ2
      ShiAzeNEkq2o2TKCZMPAguSyoqRLSH4X9ZKCYRFx+uwoeRW7W0JTG1itoBsCFqOBbljQtTqS
      bKPRAMFiYFhEbM77w6Y/derUDbfcqVOnODI2TM3mIRbyoZY2uTKzyPjhw7z513/MxYKff/bM
      E4wO9QOwtjTHeqrZ1aVnYJigU+DS9DyHxg9jtwpAnXOnz1EHuvuHiHcF2EwnWNzY5PChUahV
      OHNpjuPHx7hw+hLjjx4lvdo0gmWxxqWrs/QPDVMvZT6QYfzal//tj14AvvIZLl2eahnjo8ce
      oy7a6PLYqapVZhJFRvpCO78BrK6bVFVBsuHqapKJ7EEvNkHC6bu5X/LISNvsFVfX1g0CcrSV
      k+4Ithq8cldzvzVwc7vzWmFIR0v5vuukpmbFgAeBshWK3TTKHG4fx481S8IPHpogbO26MfkB
      4v1DxPtbzz9+dGsJeStHJyZa9vvCMR4JX0s0l2QmjjcrJRydaNb1i91gSjp59NHjza/+H03V
      60KhiOS68+UkA/6b88rusDM+0Jw/e14yHaF7UOuyAwCGDk3c/qAfM4x8/AW6H33yhg1wXfff
      rQ2wOj3DgWgYl9NKRHd8IBtA3kPJ+vtDZ+jgvkH30Agr3m7c1joVXULQSsT2DeOw7S7mOjC8
      s7tILeXRBJlKdg05FMfrELlyZZrhoT4W1rNEvDZW0pU99WzoRIJvg0qlfS7pvb7G/YKaLqAU
      c8zPz+FyWZmZnufchcu3PGe346PpGtmNLLlihZW5GcrJFdZSq/zDe5e4/N4POD89j8u9N1d4
      RwBug3Y1LX8U17hfsDh1gYJmIRaNMT29RE9PCK/v1hUmdjs+hWyamYUlNjMbNAQrufwmGDrh
      UASr082+nhjTU3vLYeioQB3cURx+7Okb3+9MXPkmegcO3Sg/r6tFCg0Hz402HQADvSE8Hg/9
      fXu7a0cAOrgvITg83IloUEcF6uChRts3QKVSoVg0d/t4GHExs0Qi+8MVb/qnwR0qJHN9rHOs
      LCep1VUamkI40k1BqZNenWFwYJDL8wnGDwyQSG/S3RWkkE0g+yMkV1fpGxnFbb+/X+T1+u0p
      0FqtgSha2jbpvh1uNZ/bjpwsy3g8dr736veID49RSq4RGzqAV1eY3Mjjcjg5fnR8zw+yFZcv
      XSLstVGX+4iHWqONmWyGULDZuEGtVJBkmVwmQyh0rZlDrcB6BiIx710PhFVSGqvV3I770ysJ
      yvkC8ZEBZt67QLA7QmJ2icPPPsHlN9/lyLNPwC3ItM2xdnL+/dMILid+qc7c5fP0PPEJLJKd
      mXPv4AwN8vo7l6CaQ9s/RL2Sp7Awjd/Xw/xinqe2sDjr9Tr3W5p3qVRq38RjCyyA3gD9AzgU
      mmPc3jV6i6VDZ2NliVBvhKruZnVlhfj4EOUr0+QMkaXFZRx6HsUuo6ZFvN4qxWqdoN/JhdPn
      +MTnf4OhUPtiRNCc2IpDYm1lDku3m0xdpZIr4PL4aSibZNMbTF26TPjAo/zE+BCapnHuzLtI
      go2aUEOr+amUVphZztMflhHsDuYn53nm5Mdx3EPFzumSKSQz2OwSnqCPqqKysbBC/bU3qRRK
      GO1Kk5sg8fHnn6eh18llUng9bpyBMGuNMNGjj2LocKBSJl9WyKfTDAyNIHu8SDY7CK3lPur1
      Ovqu7vnjg3q9flsBuFu4hQBYee7k8yg1cJDE6u5CqzXw+ANEYj04RMhnk1hlGfd4GFDRLRbq
      SgbZ4cXTpvXNVgzv76NSszAoW0in0nQP9iFFewCD1EYDjzfAyNghJH/TheZ2u3GPjGHUFNYS
      KULhIDZRY2ifi1hXEItRRzS4ST+9RyhvFrC7ZVKLa3hCAXyREN5wAH80TH4j3Yx+3hYCXl9z
      hQoEbvaxGjl4s7mDz+elG2B4dy1XVxbnECU3ke7ILd+SiqLgtFuZnV0g0tOPR96pKYVGcVND
      q1XxBEJI95CDUkqs4uqKgQWyU5cJDB+ksDyPb2CYzcVZ/APDH/ja/x8eGazuqfke7QAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stronger Team' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO29SYwkWXrn9zMz39fwNdxjz4xcIiOzlq6srq6aHjYH7GYTBBsNASJmKGEA
      6SIRIDAHXXTQRTdBB2F00UXQQAeRB5GQoI2UOE12dzUJVld1d3V3ZWVl5BL75hG+b+Zuu+kQ
      S2ZWuZuHR3hkRFbYDwhEhNvzvz13s+8t3/veZ4Jt2zYuLlcU8aIr4OJykVyoAciyfJGnd3HB
      c5EnNwzjIk/v8hrTa+QuCMLQOhdqAC4up8bo8JN/ekBx/TGT16+Tn5whk03RlRViQQ9dy4Nf
      0DGlAKKh4glGCQW8X5FxDcDltUTwhpD0fdLjE+xUNHzaBs/WlgjoGpGQl5JsUNvZIzY7h1pq
      8Ud//B/01HENwOU1RWAilSU0vcD2xib5WIQx0SLmAcuGpGHTSqXwJrIE5nyE/L1vdeEi3aCN
      RoN4PD4SraOPcZpxoKt3Pnqj0jpPva+VG7TZbI5MyzTNE3mpWtUK6xvLlOsdx3KapqGq6qiq
      R6fTOZETQVNV6rUKumE5lmu1Wj0nlqfF8VqYKtsb6zzb2B2NXg8qpT0eP1pCs3p/piO918oA
      bMtE1TQuy8qdbdsocouOoiC3lYuuTk/Wny3xxRcP2CmOrnE4M7bJ5k4JbP3cTlEr7aNpOpqz
      3b9OcwCDn/77/w8xPsHvfnAfRtcbnhpd7dAxIeSPkEyERqptmQadTgdT8BCPnF47mc7gj6fI
      piMjrN0ZsW28AT/ZVOrcTuGPjHFtegZpwLDpNeoBJLL5PPGQh65mjkTRtu0zdfu+QJiQaPDs
      yRK7ldEu6qnNEj/7+DdsbWycSadc3EfTjJEOb86MJ0A05KPb6Z7bKbRWhZ9/8htU0/lzX0oD
      sG0byzIxTfOFC2dh4kWkw9rK1pnPYRoKv/30l/zm4ZMz6Ui+IDPXZgh5pTPX6QjbtuhaXt57
      e5HpmZkzaeUnpxCwQLhEl1qX+ezxGoW9vXM7RaPZQKvX6PaZAxxxib6V55iGRrlUZGt7B/3Y
      gkVCfoloYoqbN6eH1izt77K9u4d5+IUICHj8EabymbPUlNUnKyCJaPpoeqUDBAxNoVTcp9E6
      W89S3t/H0rtUG6dvbYuFbTY3N9nZKx2/Zts2HVnGOk3PIgX41lsLRKLRU9fpJSyVX/7iFzx+
      tgaAonSJJMaJj2cIS6/hEMjj9VPZXOKXv/2Cpnp0Y5k0Wl0SY2N4PcO3tju7BQIB//OpgyDQ
      lRsDvSPOCMzdvsVYLM3EeOwMOl9SFQSSqTTJdJaJ8fSpdSxTJ5bKIEgBkjH/qXVMQ6ctyy95
      ndqFZdb2Kjx+sj6cmG2xWyiwvraM6A0+16vu8g//8CHPNvaHr6Deodm1UHUNgEAgiGEYxCSb
      7us4BALIXb/HW7evE/Ed3OyWJXDt2uypx7L5TJKVtQ2Mox5AkAgFQ9jWWVpuAb9forBT4Cx2
      1Ol22NvdYn2rcPyaKEm062XWNk/uKvwyouQlM55jZiJJvXb6nsS0LBLxOPZh82EaKpWOhWgo
      JJJjw4kJIhO5DPncJHL3uevYMm1iyRQeYfjra6gqU9dvEDwchtqWxdzcNcYmpol4XsMeAGBz
      Y5PI2BiSCGBT3C9iGjp7+8VT6e1tr1JryGiHLYJtGRT3dtkv185QS4Ha3h6JbJSlR2uc1gZC
      gSCapuF9YR5hmwamGCAVD5+6dkqnxfb2NvvlBsHQ6XuAqdl58hN5pnIHw0XJ4ycZ9vB0ZYXC
      fnl4QUFC0SEZDQBgaAo1WWcsEiWRGL4n7agmtb0NgpEDYzRUhd39Ep1WHXVA+3ZpDSCTSdGR
      Oxw1+JGgl9X1LXL5/Kn0Juff5O2FOXxHY0JBIJXNYnTrlOunHx9np6cobZfI5ZOn9syWiwVW
      N7bRtOd+cV1p8eTpEza3Cw7vdCYQipJOpZicnOwZCHZi9A4///Af+OjB0uELNp5gjIWbN8mk
      x06xLiMSDnnY2j6YBHt8AcZTEfb3CtRPsZ4Si/jZ3K1SKh58VxXNJiCZlJoa/gGj5UtrAKVS
      hVA4xJEbVzMsZudmMQ7HecNSKRep1Gq8OCT0eP34vSJyq33qeha3t9FMBVmxTm0AgiAwNzuL
      cOipsW2Laq3FrZs3SKaSp66bZWr86ucfs7yyTEM+3fcGgMdPLJUkHwugGQdNqi35iEXCqI3q
      wFb2JWwb/XAukXphHaDbamH7fGiy84p6T7xhvvX2bULhg0l12AcWEmORIAOmAJfXALKZNJ3O
      UQ8gkEynAYFsKsFpQkJC0TjZdPKFOYSN1x/k3lvvMjt9Ok+Q1m4Qn77Jm3cWSI6dfqiSyuRQ
      O00M8+BOEgSRVCKObtrUqqcfoomSj1u3Z6mU6kincBwcYyh0DYHy7jorW/uAgNkqUWzrpCen
      CQwjbRl8/ItfYlo2fr/v+GXJ42F65ibz1yeGq5tlsr27z9IXnyF5D4Z50WCYzHiemYnswHvl
      0hpAvbDCxm6JhvK8eWlUimzt7nOaebAu19ner+I5mFQgCBJGp8GTlc1T11HtNNndL9FuNeh0
      zhbnU6uU2Np97gERvT6ajQZjsbOt4Cqajke0UJSz9ABBkmEP2al5ZvMHXqlAdAzJUDHNIZ0I
      gsD03Dy3b99mdjJ3/LLk9fDsi9+wuTPknEIQCIUjvPPut8gkDnoAXe3yyccf8+zJ09d3DjA+
      c5NkLEo8eBStYbO3s0PtlAFvzfIO5WYX5dBfb5kaa+tbtFqnj5GJZqeYHR8jnJhgbjJxap3C
      9gYTc7eYyL483LF0Fc042wquYEssvP1N8mcJhTAV6h2T7Pg4ocBhqy358aKwvTOkU0L0MD0x
      jqooqC/MedROm66q0e0O25AIBINB6pUirc7B/MHrDzI9kSOezuAbcIdfWgPYKhTJZZOIPF8I
      SybjiOJpJnM20/N3uTaVJ3IYFy5KfhbvLpBJn97PDhaK3KVSLtE6Qw9QqtaJRiI0m43nNbZt
      5m/f5eb82VaCo9EQSw8f0OycvgewBR+ZZJhG82iuZNOsV1AMgVRy+HB2Q1NYX1tl99CDZGhd
      pPgk/+Lb3yI/PmRDIggEJZWWEaBSOphUd7syxWodTRv8mS+lAVSLu/iCUVrN5gv+dQtLCmCp
      w0+SNleeogh+lFYV3bQAG13rUG/rjKdPP8kECdtUsUQJUTx9dN7CwgI+n4/FhdvPlT0evvj0
      n/j1w2dnqB+UywXkWp1G6/QGWq3X8Hg8x+HhSrNMUQZJlJjKD9mA2DYSOm1NJHO4hiB5fDSL
      W3zxdJNwODhA4EtYJoWazvV8lGjswHiCwTDjqTiNapnVzR3Ht19KAyiVqly7eZOI16B9PIgT
      CAZ8CJg05eHclpppY+sqoiger/xube6STETZK5YGvNtBt9tme3uHrqJjDYg5ccLnDxAOhwmH
      nl98td1A90bxcvqQYdu2yE3f4s69BTJniFYVTIPCXpGxxEFjIfmCBD3g80rUW8M3SJVai3BA
      olSpAmCZJr5QnKl8+iVX8MkqJyBZCp8+eEQi8XxRzkbA7/Wiqs5u1UsZDn39xnW2Ntbw+hOk
      ws+HPD6vl3KzRWzIVuLGrYWDP6amDl+xkLsqd65dY2np6ekrKgjEM7nB5YbGxhse4517C0Tj
      Q660vqhimXRabTqKTn19nYXbN07lqrWAZDKJbR24L72BCNeunXJOIQiMZ1JsF9dQVA1mJpG8
      PsZzp/0eBaKJDB98K43kObhXdFUlEh9D9GpMzToPIS9lD+D1h7h+fZ7pydyxG+sgdNk6boXO
      hsjN+Vl2d/e4cfv24OJ98AXCxAMijVaD+hkW076MbRk8/OIp4aCXtfXTe6lEyUsg4EVplfDH
      Mqdep0hn88zNzZHLjCh+3xNgLOQlMYr9AIJAMBgiHA4TOHSrev1+GtUKXu/g+eKlNICvYvH0
      yTKKqmFqo9l5FYzEmZ2dIeQ/wwopgADNWgPJN7rO1MYmFAjQaHUIBk4fwmBZJpqqouMnc4Z1
      ipFjdKnJOtXKKcIoTogkiSeaBF/KIdBXEQgHPTA2gWRfnmRaWrvKTk1jeiKD1zu6r1IUfdxe
      XDizzu6zx5ihOD6/QLnaJjp5+uHUyLAttgsV5mdy1DvnsyVSllvE0hN06lUGTc1ekx5AYGp2
      nqlchnw+f6qV4POgWanhCXjxBLxUi2cJqjsfMpMTdDpdRHyMZ0YUe39mBLwSfPrbBwQCgXM5
      gyR5WP7817RNkUHOueO0KIqiYFlniY0fnna7TSQymr2qtm0jy/LI9EzTRNM0gsEh3XJ90DQN
      27bx+08/pHkRRVHweDx4PKPpeWRZJhgMIoqjaRNHeW3PU+/42/N4PK/cACRJGtkFBEZ6QwiC
      gGVZI9OzLAvbtkemd/TdjUrP4/Hg9XpHlntn1Nf2vPReMoBBFLbWKNW7LN5bpLi1wl5NJZ8K
      UijL5DNRCsUG9956k62nX9DS4O7dRbw9tqQdbUYXRRFJGs1e2suud9SyjlJPkqSR6QmCgCRJ
      IzOAUX5356k3lEklkilUu4UI6LbE7FiQXV3gxniY5RbcmY5TlS1UTUU3RNbW14gGvbRbHeqN
      FtGwRF0L8K23FxAE4fhnFBzpjPICjrJ+oiiONLvZeXx/56E3Ks5LbygDWFl+hhiIUyqX8dgG
      G3WV8WSQZ3syuUyUpc0Gd9+eRchOENdUuqrC+naFyfwUtzNpZLVDfauMjYAoHFRiVGPO41R3
      I9I7Gg6OSu/o4o1Sb5Sf9zz0RqV1nnpDGcDdt+4DBxOmcCbN5OHrk4eLbZOHC60vrurdeOH9
      MVLk88NndHBxOS9OZVLh8CVaVHFxOQOvyTqAi8toMU2TR48euQbgcjUxDINKpeIagMvV5Mjt
      7xqAy5VEVVU8Ho9rAC5Xk1AoxDff+5ZrAC5Xl988K1xsOHS326VUKnHjxg22trZ48OABk5OT
      7O7ucvfuXVZXV3nvvfdct6vLuXGhBqDrOrXaQRjx9PQ0rVaLiYkJgsEghUKBTqfD1tYWCwtn
      j413cenFUAZQKmwhmx7mpvKsPv2Cal0jkQ5TrbTJpGOUy3XuvnOfzaXPaGlw7+49fF4B27LR
      dAOfV0I3DzKCCYDf76fT6aAoCl6vl0ajwZ07d1haWiISiaDr+okeVOficlqGMoB0No92mEVB
      QMAWbEzBx63JBCttgcW5DI2ujWmaGKbA+sY6kaCHdquLqqr4/QIVWeD9+/fAtqnVakiSxGef
      fcbCwgKLi4vous6dO3cIBoN8/vnn3Llz50RPQzx4qox1orInwTCMkevZtj0yPdM0MQxjZAFi
      R591VPE2R/UbFeehZ5rWcAawt7NJodLGsmz8AT9+xSYW8LBekZnNRni21+TuPRHf1BxZQ6Oj
      KBRKdaYmp4gFvLS7bXTaCIKIKEIul2Pu2vxxwlUA1bCRfEE0Exbuvkko6HOo0XOOwpdHGTNu
      GMbI9I4e93RZ9wMcfXejMoDXYT+AJA0ZDJefuU5+5mB3k8/nY+IwCC53mLE8lT0Ij0u+sNt/
      Zvb5+8PxOONfyn7xlz/9gv/9Z0v0IjMW4t/9lz8cpoouLkNxKnP3+U7WKru4XHbcdQCXK41r
      AC5XGtcAXK40rgG4XGlcA3C50rgG4HKlcQ3A5UrjGoDLlWaoleBqqYAphcgk47RqRbbLMhPJ
      ENvlNjPZKJt7De7cucnu2jNausitG9eRzvDoIBeX82YoA4jFk+xXqkCcjY1NPOEU5WaHfBiW
      izI3kh5KbQvDFvFgsLVTIBry0pVlSpUmqUQY2fBw+/o0tn0QNOeYj9TmxAFQbjDc2XCD4U5A
      rbzP1m6ZaDRKJBqlXi2hRWI0q13C8TCrO23m35ijoXaQFRu/obO7I5PO5JibyFKXGxQKJW7N
      zyKJBwFJjl+4cLKcpeAGw50VNxjuBIylc7ydHKfVajF77Qb5aQuvR8QwLbzSwQPofF6BG7fv
      InDYqlgWXo8HAYil0kxO2wNztru4vCqGMgCvz4cXCBw+tsfvO8jW6xMPfx/+f5wJWRR5MZ/v
      l/93cbloXC+Qy5XGNQCXK41rAC5XGtcAXK40rgG4XGlcA3C50rgG4HKlcQ3A5UozlAGYho6m
      P4/HUBQF09Bpy10sU6ctdw5e77Rpy10GPKXexeXCGWoluFEt09Rs5qYm6LYq/OLBMjPjY8iy
      ijcUwOx2mL7zFnubmyiGxfTMNYI+CcPQKVfqZJJRKi2NqYksbjSEy2VguOcEpzJ0iyXA5unj
      Z6jdNl0rTS4hsdWVuJaJ0dVsdLVLs2uzv18g6BXpKibhoI+d/X06Kkzk0uBGg54JNxr07HrD
      p0bc3aTcUNBUjbe++T71Wg0Jg51Kh1u5CFvFJrfyIsHrt5g2DTpKh2K1zWQ+R8jnQe60oKUh
      CiKCGw16Jtxo0LPrDZ8acfo6+emDmw1gLJEAYOHgFwvxg5SI0Wj04DeJl1IhBsJhUpmzVt3F
      ZXScytxH+ch6F5eLxHWDulxpXANwudK4BuBypXENwOVK4xqAy5XGNQCXK41rAC5XGtcAXK40
      Q60ElwvbaGKQifEUpcIWO/sNxrMx9sptJrNRdvYb3HvzHtvPHtHUBO7eWcAjuYtmLpeXoQwg
      lc2xe/ic4EQyTatr0tUt5jNBlpsWC5NRKm0LRVUxDJG1jQ2iIS+dVodqvUU0LNEyQ7xzd95N
      jXhG3GC4s+ud4jnBG2wUavi8PiqFDXQxRDTo4emuTDYdYWmjyd23Z7CTWUKaiqp1WVnfZyI/
      xc1rY8hql+LGPrYguqkRz4gbDHd2vVM8J3ie/Ay0Wi0W3njn+PW5w99HzwTOT04eH7v1wvvj
      wMTkzOlq7OJyDpzKpI6iPV1cXiWtVotAIIDX66XZbB5HJRuGQTgcplarkcvlhhoWjq5PcXE5
      R2zbZmlpiVwux8zMDB9//DG2baPrOrZtEwgEmJ+fH1rXNQCX1wJBELh27RqKogAQDoexbZtG
      o0G320WWZXZ3d5mensbr9Z5Y1zUAl9cC27Z5/PgxhmFQKpVIJpOYpkk8HqfT6ZDL5djZ2Rl6
      ouwagMtrgSAI/M7v/M7xuL/XOH92dnZo3T4GYPPj/+N/wwzn+Z3v/3OCQ8u6uJwP/8X/8O9R
      tN7rAf/hd+7w+98cbh7QtwdIZpM8K3fwDVc/F5dzpVBp9zWAtqINrdd31SMylkLSuuhDS7q4
      vD44LvvFxsbcaDmXrzU97++VR5+xur2Pbb880VA7LRrtLgCK3GBrt4jWabGxvYeutFnf2sW2
      obi7yfr23vGExcXlstJzDjC/+BYPf/U/sdUO8jvff/66zx+kXCwRjwTZK1UJY/Nkr8OM3+Lz
      TYXbCdiXLeR2F82UWd8yiAa9dNodyrUmiXgA2fCxeHPWDYY7I24w3FcZ5no5BsOtPXnExOI3
      CNe7vLiksLe9wcpOmVAojK11WaurpJJBnuzIJFNRltYa3HlnFhkb07DotKpsbraYyE9xbXKc
      utxgr1Dgzq1rbjDcGTmvYDjLsvjRj37EwsICKysrZDIZSqUSExMT3L17d+j6jYqT6A1z/R2D
      4eZu3qLw4Y95+nSPb3/vO8eF8rPz5GfnqVarXLu1yLXD148dT4d/zN9a6HnSBDmuXT9R/Vwu
      CEVR6HQ6PHjwgA8++IBSqcT+/v6pfOyvAz2b3/Vnjwln5/jX/8m/6rkGkEwmz7laLhdFKBQi
      FouRyWT4y7/8SwzDIJfL8fTp06/lnK5nD3Dt9huvuh4ulwRRFPn+9w8mft/+9rcvuDbnjxsK
      4fISD1eLdLXeqz/ZsTCzubFXXKPzxTUAl5f4H//vX7FZbPY89kfv3+Q//+H9V1yj88Vd53K5
      0rgG4HKlcQ3A5UrjGoDLlcY1AJcrzakNQFM6VGoNDE2hWm9i6iqVWgOAVqNKpd50nxPscuk5
      tRt0fX0NVbEoR/wIqsaez4/PUPGEY1RKFTRDB3uKUMCDrmnsl6rkMnHKDY256YMn551kZXHY
      1cdRrVYe6YxS7+hnVIxaD3BstGxO/n1cyGe1h6sf9hkMwCMKtHUNiRCpsJ+CKpGLBdEMG0Vu
      Uu3YCFIRvwdUDcYiQfYrVRTFxrJzYFtYloU9IBrUNM0T18myrKHKD9Iatd5RBOyo9EZdv0Fa
      tn3y842ybifVs4b4fo++v1MbQDKZRBcVJjMx9qoytycibJda3AiJBOdvM2ebyN0upVqbyfw4
      Aa+EV/ZQE3VEQUAQJSRJQrjE0aCj1Bt1NKgoiiONuDzScwquFoXhoi1ffTSoMFT9xGFTI77I
      WDrHWPrg7xvxg+C4m9GDBwZHIhEAQtE4mezz9/iDIZLp057RxWX0uF4glyuNGwv0irFtm5/8
      5CeMj49TLpep1WpEIhGSyST373+94mxeB9we4BWjaRpbW1s0Gg3effdd5ufn0XWdbrf7tYy3
      v+y4PcArxufzMTU1RafTYXV1lbt379JqtWi32xddtSuJawCvGEEQ+N73vvfSa1dh48llxTWA
      V8w/fb7JXrV3a59PRfln96ZfcY2uNq4BvGJ+/Okanz4t9Dz2zYUJ1wBeMe4k2OVK4xqAy5Xm
      1EOg4s46JdkmFYLdssxEJspuscG9t95k69kXtFS4e3cRr/ucYJdLzOkNoFzGFoI0vWFujIdZ
      bsGd6ThV2UJVVXRDZG19jWjQS7vVod44eE5wXQ/w3pu3r2xqRCdf/zCpE88rNaLTSoRlD5d6
      8LVNjXgSMqk0e6U6EhbP9mRy6QhLm03uvj2LkJ0grql0VYW1rQqTE1PczqSRlQ617RJc4ecE
      O92wgjBcMNd5pEZ8vYPhRpQa8SSMT80xPvXya5OHDozxXO74tRsvHI+RIj/hejlcLg/uJNjl
      SuMagMuVxjUAlyuNawAuVxrXAFyuNF/LWKDt7W0++ugjrl+/zsbGBgsLC+i6zttvv33RVXO5
      ZHztDMC2bX76059iGAbZbJZwOMyNGzd48uTJRVfN5RLytTMAgD/8wz9kZWWFhw8fEgqF6Ha7
      rKyssLi4OLKHwLl8PfjaGYAgCKTTadLpl9NPvPPOOxdUI5fLzOkNwLYp7O0xFg1SqMhMpqNs
      l5pcn5tif3udjunl2szEyGJVTspPfr3GZyv7PY9l4iH+9ffffKX1cbkYjvZZh0IhWq0WsVgM
      XdcJBAIvlTu1AdTLBTZ3S3THIgRFi8fbChMhm0rXwrA9iGaHQrFCJOBB7XbZr9TJpuO0FJtr
      MxPYh5m5HDeCD5EZ7igY7vFmmQ9/s96zzOx4nP/ouyd71OdRoN6ospsdxQLZDuFmw2SOO6rb
      qIZ0R3rOwXDD129UnChznfW8foVCgZ/97Gdcu3aNTqfD3bt3+eyzz/iDP/iDY70zZIaz2dvb
      p1mrEA0FEEQLj+ChqxrERIFmdZ+6AknDolE1kLxh8qkxmh2ZSq3D3MwEoigiCAKCU/iVwIl7
      EEEQDjQdC51cTxTF4zqOAlEUD4LhHGooCMKF1m+QMQlDXo9R9v4n0nuhTDweJxwOE4lE2NnZ
      QRAEcrnc8fEDvVMHwwksvPEN5m4qSIJFtakwHQ9SrncY8wsEF+4hYqOqKnVZIZUYwysJBJQg
      wYh1kBrxsBLOdywnbuGOexKnaMsh9I7CtEfVwg5zYw+jOcpJvSA4NkcInPx851G3kxjoUZly
      uUwwGCQajRKLxdA0jdXVVaanp8lkMocGcMZJ8NF4ajwTAiCXPXiqsN/vB8DrDxCJxY/Le7w+
      wtHTn09RFEzTRJIkLMs6blWDwV5PM3a5yszPzzM/P3/8N8Dc3NxXyr1WXqCnT5+yvLyMz+dD
      URSCwSCGYfDDH/7woqt2LqytrREMBtnd3SUUCuHz+TBNk5s3b1501S415t7nKD/9b/oeD/7g
      v4fDR8C/Vgbg9/u5f/8+jx8/RpZl5ufn+fu///uBG01eR44maY8ePeKtt97i888/p9vt8u67
      71501YCDSf2PfvQjJicnKRaLXLt2jSdPnpDP5/nGN75xoXWz1TbW3uf9C5gaCAcG8FqtCu3s
      7LC+vk42myWfz2NZFh988MHXcnFLEAQqlQrvvfcelUqFe/fukUql+Md//MdLkUJRFEUWFxcR
      BIHV1VVkWabRaNBs9n7G8GXlteoBfu/3fu+iq/DKsCyLRqPB06dPmZqaIpVKsb29zRtvvHEp
      ejtVVfmbv/kbvvOd75DJZNjZ2cG2bRRFueiqDcVrYwDar/8X9Mf/b89jYixP4I/+7Suu0fki
      SRK///u//9JrlymYLxAI8Gd/9mcA3Lt374Jrc3peGwOwmgWs/Yc9j9na1y+xbPf/+jcYO7/q
      ecwz/3vwz/+rV1yjl9GXfwya3POYmJqHwFTPY5eN18YArhq23gG11fug3n21lemB+g//HXZj
      q+cx7/3/FN76z15thU7J12/26OIyBK4BuFxpTj0EKhW2WN8okshGqJVl0pkolXKDxW/cZ3Pp
      M1o63Lt7F59HxLYtVFXH7/OgGRbBYGBQBISLyyvh1AYQCkcYn/Zi6gq3pnystAUW59I0FRvL
      MjFMgY3NDSIBD+22gq5qeP1QbcO37t+DIVMjOkeN2sepDJ2eO2wPkWrxolMjDip3mVMj2oeR
      mxeVGtG0nKNGDdPEFM6YGrG4X6Cji6QSEdarMnOZKM/2Gty7J+KbvkZW1+goXfbKDaYmJ4kG
      vLQ7bQw6CIKIOGRqRMPpQh+mFBRF0fG5w8IQqRbhYlMjagPKXebUiMKIn2EMQ6ZGFCXHch5J
      QhLOmBrx2s3F479z+YPfyezEwe9k8vjYzOzz94RjccafZ010cblwXDfoCeh0Ovz1X/81U1NT
      KIqCYRh8//vfv+hquYyAK20Auq7z4Ycf4vf7EUWRcDjcM5DL7/eTTCbZ2dlhcXGRsbGxC6it
      y3lwpd2gXq+X999/n0QiwZ07d/puuTvajfTmm2/y6NEjisXiK67paGi32/zVX/0Va2tr/MVf
      /AUbGxsXXaUL50r3AABLS0u8/fbb/Pmf/znvv/9+zzKiKPLd734XgNu3b7/K6kBFmaEAABN6
      SURBVI2UWq2GYRjs7OwQj8cpl8vMzs4OfuPXmCtvAPfv30cURf7kT/6kp0fq//noCY/Wyz3f
      O52N8R9/743j/03T5Mc//jGJROI4Rn5xcbHney+CXC5HKpUiGo3SbreJRCKv5Ly2bVMul4nH
      49TrdZLJZE+PTrVa5aOPPmJ+fp7Hjx/z/vvvk8/nz7VuV9YArNo6llwBwAT8h68bgOALQfJg
      19XTrQofPewd87I4l3npf1EUuX37Nq1WC03TWFpaulQG4PV6j7MivPXWW6/svK1Wi6dPnx5n
      AQkEArz33ntfKXc0t1pdXeV3f/d3WVtbe30MwDINuqpOOBRE6cqYtkgoFLy0K77qL/8dxhf/
      Z89j4vg9/P/yL4bW1HWdv/3bv+Xb3/42sVjslbWwcNDKfvjhh7z77rtEo1/deK3+47/F6hO8
      Js28D3N/eG5183g8SJLE/fv3+fnPf04oFOpZrlgsYlkW4XCYv/u7v3slycxGZgBb66vIcofp
      O2+xt7FBVzeZmb1O0C9h6DqVap10Mka1pTKZz15awzgLPp+PP/3TPwVefYy8IAjMz8+jaVrP
      48bmx1jFR73f64+dqwE0m03K5TLLy8uoqkoqlepZLpfLvfL93aPrAUQvk5kYXc1GV7u0ujb7
      +wWCPpFu1yQc8LGzt0dHgYlc1il7yWuJsfkxVnOn5zExMg75b57r+S3L4he/+AXZbJbvfOc7
      53quYcnlcvzgBz8A+jcM+tJfY5tqz2NS9i74z2coNDIDyCajbO43uZ0XCV67xbSlI3e7FGst
      pvJ5Qj4PcqcFova1bP31z/5XjOW/73lMmvkA6QfnawCiKPLHf/zH53qO0/Bf/88/pd7ufWN/
      /5vX+aMPbgGgfvjfYiv1nuV8/+zfwMKfnEv9jg1AluUzBi95mRhP0Wo0Dv4VJIKhCLOhg3Gw
      ahh4fEGyqSDNZuP4nNmoxHs3e3eJ0ZCfRqNxECQWmsOc/m7PckIojdFo0O12mRjz9tVLxUPP
      9SI3++vFplCbTXRdZyYV6Ks3kQ4f6+nxO1jTvUPJxOQNhFYL27a5Ph5CsnvrzWWD1Ot1BEFA
      S76JRe85hBi/g9VunygW6Cj+SM3cx+7TikqReXRZxrIsFqdj5OLenuXyY97j+qnj72PHbvXW
      C86gyQe7xZIhEZ/QOzbHg36sp0x8B/TeO8w0Xx71UO/+fBLd6L1ekwgK1Ot1bNOP1ufaAphd
      k44t48NAsC8wxUCj0SAejw8sd5QMywnbtmk2mwP1jnKIDtIzDANFUQZOZE+aQU5V1WMPyCj0
      ZFnG5/Ph9fa+WY84yh86KGq02WwSiUQGnvekeqO8tuepd6lWgtv1Gltba1SbL2cW+PJF2d/e
      4uEXn7JVaDjqNes1NjdWaLRfnhh+Wa+wtcmDz37BXtl5b3G9VmNj7Rntrn78Wq+cldubm/z2
      Vz+n0nDeulirVllbeUpXe97z9tLbXF/n009+TrPbe4J7rFcps/LsGZrxPCS81w29sfqMTz76
      mE6flvSIarnI0yfLmC+0kV/Vs1l/tsRH//RLnGtnUy3t8eTpKi8GrH9Vz2L9yUM++vlv0HHC
      ploq8OTZuqOe0qrxm98+4OnKek+VS2UAcqNGQ27RqL/cFX75hpBEm3g86Rj6DNCulWnJbRrN
      zktaX9YTBYv4WBpBHNBKVos0W21a8vMxbS89wdYZS44P1KtV9mk22nQUZ4PC1kmkss6JhIHy
      /g7Npozywo3dS88yTVKZDANSCbO/s0mrJaO/MEbopWeaNplsauDNtLuxTkdWeHGg3asn0QwY
      H08OqJ3F5vIKiqrzohl/5dpKEv5gmJC/91DxUhmAIAoEQwkyGacEoibLT1bpqt3B6bcFkXA0
      RToV7lvEsnSWn66jqF1Mc8BoUBCJJ7IkYv2HMaahsrKyhaJ0MC1nPQGRVDZHJOTrW8bQuqyt
      7RyurTjriR4fmfEsQV//IYCuyGxs7dFtt3FOhg4ef4jxXBavw52odtps7RbpNFsMSobuC0XJ
      jidxGqB02w1296u0G80BtYNAbIxMKu6ot7e9Tlvu0ur07p8ulQHAwdZJx11iSEzPZJBbCtag
      GxYTVdWwHG5EUfQyNZWk3VIdywHYlommaVgON6Lk8TM5EaPV0rEH6JmHek73tccXZDwdRO5Y
      DLojTNNE03RHPW8gTDLqQdE5gZ5xoOdQxh+KEPHa6II00LtnmDqa5jywCUbi+E0NfP0bhQME
      DENH1531MrkJWs02fTqAy2UAoegYolqn2urtNjsiEh9D6yiEos5ZoSOxMcxOjbrsPDqNjo2h
      Kyohh5YYID42RrdVpdV19pZF4wkMXSMQcJ6gJsbGaNbKdDXntjOeSKIbOj6v8+QuMRanVimh
      mU4NCIwlU+iWiXfAEC0xFqdcLOKsBsl0CsO0HFtigLF4nFKxNMDuBFLZJJphnkivOEDP6w8S
      DQgg+Xsev3SxQILHgzDgAgqil1Q229eqv6o34CsXfKTHM3gGOw8QJQlhwFBEEv1kcmmkEzQv
      oiTh2GQDHk+QbFY80eKhJEoDW3Z/MEwm6Rv4bIYDPfGgeg5lg9E4Scl5P/FLegPKhJNJBMXp
      WTpD6AkC6XQKX58e5dL0AJpcY7NQRPJGiEV7WyuA2mlRrjVoNttIDi2Y0iyzvV/B648RifRv
      2ZV2g1qzSbPZQXKYVLdrRQqlKv7QGMFAf8vrNGs02i2azS6iwx3bKBcoVeuEYin8DmP2dr1C
      o92iJWs4NdjV/R0qjTbRsRReB8trVks0mi06quE4qS7ublFrdUmkUo7nrZWLNBpNNNPZngrb
      GzQ6GqmU8+S2UtyjUatjCM635s7mOk1FJ5120jPZ3dmj3mji8V7ySXBtr4wnHGR7cxefr/8N
      5g9F8QF37s6yv98ncxpQ2S3ijwfZ3izg8/T/mIFIHNGCWzfzVKq9F2IAKoUSgXiA7c19vA56
      oVgCyxS4MZui0eqfKLa8XyYY87G9WcTjcIdFxlLYtsRMNoKs9B/vlooV/H7YK9Zxco7FkhkE
      0Us26kN16GnLpQpeNEr1juNNkkhnkbwBYh7b0W1ZKdcQ1Ta1ju6ol8qO4w1ECNm646S6Uq5h
      tWo0DSfDk0gnImSnrtOqVXqWuDRDoOz1G6Qti/nJ6QGLMRaRWJSlh2vcvNv/iY8Tt+9gWRZz
      4856tm0Si4V5trzLrbv9A9hm7tzBsmxmxmcd9SzLJB4JsrpdZmEx27fc9cW7WJbNVM550csy
      DWIhH1vlFovjk33L3bp7D8u2mZnBsecxDYNwwEOxqZJx6CkW3ngT27aZw7mVNHSDoF+g2rZw
      yga6+OZbh6lenJ25hm7i81i0NeeMDffe/saJ9CR/iMbmMrHMdM/jl6YHEAQBRW6ytbVJqdo/
      x7zWlak0Va5dv45fck4d0mnV2drcoNLov8Clyi3qHZO5a7P4nDK0CCLtRo2tzQ1qrU7fct1W
      nbYuMDs77diyC4JIs1Zhc2Odpty/p2g3aii2j7mZScehiCCK1CslNtfXaTv0FK1aGUMKMjuV
      d5xTiKJItbzPxvq64yS9USmCL8rMpHO6D1EUqBQLbKyvo+r99WrlfTyhMaby4wP0oLS3y8bG
      JlrfBT2T3Z19shMzJOO9XeGXxgCOMG0BTW7Rz88iefyEA/Dw8wc0ZWdvEYAleFBazb7dqccX
      JOAxefjgoeONc4ANko9Os9534uULhPGi8PmDR3S0AbFVtoXoC9Kq1/oWCYTCCHqLB58vvbTC
      209PCoRpVHvvYAMIRqKYnRqfP3yCMcBNi2XhC0WolfvvgQ7H4iiNfR4+ejZwHcC2bPzhMNVS
      qW+ZSCxOu7zD0pO1gd4n27IJhoNUStU+JQTGEjFWnz6i0KfMpRkCtUu7LBdKYBlI2fm+FdO6
      LUr1DjOzs45j8UZhk7VSDdsyyUzc7OtSU+QG1ZbKzOw0HochQWV7ja1KA9OymZq73bfb7TSr
      NDsmMzNTjj3A/sYKe7UGuikwf7v/rrFWvYKsC8xMTzgObbbXnlFptFB1gcU33+hbrlEtodo+
      pgf0AOvLT2i2ZboqvP3N/o88qpb3MaUw0xM+x6HI6pMlWh0FzRB5+5v9n3NQLu4hBGJMxJzT
      Zz5bekS7q2Lj4813+n1ei93tApmJKSLh3i7zS9MDqF0Nj1dC9Powuv2HBJLXTzjox7Js/P7+
      fnaloyFJAl6/D13p31N4fAFCAT+WBX4HP7ui6Ai2jT/gQ3dYzPEGggQCB14nr4NfVVUNbN0i
      EPKhO0Th+gMh/D4fCCIehyGfph3q+SR0h4XEQDCM3+s5yN7mYAG6bmDpFn5JcJzchkLhg/UJ
      yeN4M+mGhWlY+AT69u4AoXAYn0dCGKBnmBaWaePBcuh5BCLRCKJt4+3jBn0tokG/jNysIwWj
      BF64YU8aDdqLVqOGPxx/yVt00mjQXjRqVcLxxEs9wEmjQXtRr1WJxhMvuX1PGg3ai1q1SjyR
      eKlHOWk06FexqVVrX9E77bUFm2q1RiKReCmu57R6hq4gd03isZfnAJcyGrS4ucrK5hbygKhH
      n9/Po9/8gi+erDqOE3fXl1nf2qajOo/t/X4fDz79hMfLG46LKpsrT9nc3kEZMLYPBHz8+pOf
      83Rty1Fv9dljtrd3UQdEZfq9Er/85GNWNnrvODti+ckS29u7jj0AgM9j88nHn7C+XXAs92zp
      C7a3CwNjkDyCwScf/4KtglO+JJsnjx6ys7s3cK4gWSoff/JLdvZ7uy4PMFl6+JDdgvNKtSR5
      Ke+s8OlvH/Sc412aOQCAINpoXR3TKcOzpbO1s8tYMsv4ZH+34GHpgbFAlqGyvbtPMp1jfMLZ
      k2Fjo6vOsUCG1mVnr0h6fIJcvr8bFMC2rYGxQJoiUyhVGM9PkhtPD9AbHAukdlrslxvkJ6fJ
      pZP9CwLWkZ5DmW67SanWYmJ6hmzSuYW2LHNgLJDcrFFpdJmamSU95hQUKWBZxsBYoP3CNqI/
      wlwujb/HnPHS9AC2bSL6ogS9zpst9p4+xRZtbL/A+nql7wewLQNfMIbf4xz0u/NsGdNQsbxQ
      2Gv2LWsaOqFIHI/krLe1vIrebmFJNuW60resoanE4knEAfE4mytraI06uqnTVPu3nbqqEE+k
      BuqtrW6gNut0W026fXZqAWjdLmOp9EC91bUtlEYDuVzB8Dut4HdJpNOOE3mA9Y1d2o06cqmE
      5XdYwe90SabTAzbmyJSKbepNlcL2Vs852aXpAQxVoSl3sE0NzcFPHM9PoNYbYMHERP8cnZrS
      odXtYukammHRLyA6kc9RrjfBFkk4hGFriky7q2BqGrpp0y8ML5Ubp1JvIiCSjPcP1lO7MrKi
      oqvaYY/X+2ZMj2epNdsIokQs6HRDtOkoGpri3ENlxzM0WjIIEiEHL1q306Sr6KiK5tgDjGdT
      tOQuIOEUSijLTRRVR1Ocg7Az6QTtroooenGa3bRbDVTNQNedYoZ8xOIhTCAY7n1tL40B6IrM
      XrHMWCJBPNp/ohiKJ5gMBOmqGsFQ/xZH67TZL1ZIJFLEwv3LRcZS+AIhFM0g6HSDtZuUylUS
      yTSRYP9LE0um8QdDqIZJwCGkQ27VKVUaJJNZgg7lxtJZAqEwmmnjc/AqtRpVKrUOyXQOv4M7
      N5kZJxhuY5g4RoM2qhWqsk46O+F4k6THc4RkGdPqZ8IH1CtFGopNNj/tWC6bnyDcbmMhOpar
      lorIhkB+as5hGONlZm6GVquN19/7nro0QyB/KEYmEaHTrFKu919pBdhdW0bWLcexbjA6RjIe
      ol0vUWs5b03cXF0+iItxEAzHk8QjARrlfRp9Nlccsbq8PHAzTCyRJhr0Uy0WkFXnSfXy8rLj
      k28AxlIZQn4vpd0dlAELZsvPlgfsuYBkdpyAV6KwtTVgayIsP3s2cC9FOpvH7xXZ3dwaMAm2
      WX62MnAvRTaXw+cR2NnccpwEK80yW/u1vpf20vQASB6u37iNIPTeJvcci0AkytbaMt6bi6Tj
      vbOMCR4fN24tIOCsZ9sm4UiYjZUVvAuLjEV6tzuSN8DN23cG6lmmSTQSYnV5hVuLd4n26VW8
      /hC3FgbrmYZBNBxgeXmVO2/cI9Snt/AFoyzcOVhQc9TTdSIhP8vLa9x7+42+4SSBcJw7i8mB
      eoamEw76WF5Z58133ujbooZiCe4kDibxjrFAmk7QL7Gytskbby32vUEjY2kWU+MD9WyPD7Wx
      xV7Az/WZr2bFuDQGIEknq4rWbdNSbW7cvEnIYWhzUj1FbtI1Pdy8eYOQwwYW6YSP++m26+hi
      gBs3nIc2J9WTm1VsX5QbN/L4HYZAJ30cUbNWRgoluJENOw6BTqrXqBbxxzLczAcdhywn1auW
      i4ST4+TCoRHomewVKszOzxMM9m4oL80Q6KRIngCRgMDnn31Gs0/CpWHw+kIEPCYPPuvtJx6W
      o1igzz57ODgW6AQEQlFEvcVnDx4NXC84CaFoDLNT5cHnS+iDYoFOQDg2htLY58HDpwP9+ych
      Gh+jXdnh0dLqCPQEEsk4y4+/YLd4ycOhT4rebVFpdJmZnXGM3Tkpityg3taYHhC7c1I6rRot
      xWJmZtJxw85JaTcqdAyRman8QBfiSWjUymj4mJoYH0l6ylqliOUJMZmPjyTjX7W0j+iPk484
      xxadDIu93T2yE1OEQr0nwf8/KG+FT0Alk/IAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Top 10 Batsman' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 10 Bowler' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9x48kWZ6g95lycy3DRYSHzEhdVVldXd3VXa2mZ3aWjd0heeBhL+RiedoT
      Af4hvPFCgOSJAMEFZ4nFEjPEbM/stJyuLp0lUkSGFq61u2nJQ2Rmicysyu7OTI8K9w8oRJa7
      uft7Zvaz935aCMMwZM6cGUQQBEGc9iDmzJkmcwGY81yxbXvaQ/hK5gIw57mi6/q0h/CVzAVg
      zkwzF4A5M81cAObMNHMBmDPTzAVgzkwjP/iHbdtnXmOf883jrN9TDwVAVVVUVZ3mWOacU/L5
      /LSH8EQe2QJ59oT9wzqNg7v0de8L7zVP9hkZLthjtg5bX3jPGI9xg0ejKsLA56N3/4nff3gH
      fTzCCx4dxPb21p84ja/Hd200w4bQZzTWHn9QGOC47uM/73t4/hcH77oOwTySZOqEYchIs3Bc
      H9N2afTGhGGIZbvs1no0e2M006Y90PD8gINm/+G1lL/8ZZ4z4Z233yUedFj/bpIP97e4dPUK
      J4cH6JMumnOXb19f5Ze/u8XglZcpqjbHo4CiKrCwusitDz/h6rducPfmHZKlJV6/tsLtnUN+
      +NPLHG5tE8lFOTrusnHpCrWd20SySxzc+i21Ro8f/PBNIpLwXE6S0enwcWfAq4tp3t7u8ZPX
      ryMBvhAyHAxRZAU1qnJweER1ZZ2o6DEyPFIxEU+MI9pjbCGC6DsIkTgxyefe3gGVQpl4Ps24
      P2ChVEYf9giVOBEc7FChkE09l/nM+YwgCNk6alMtZjho9gmCEFWRiUcVgiDgzmEbURTw/IC4
      qhCPRhiMG8BjBABAlhWUQKJ1tE2jtodm+QixBCuZFOvFKh99fJfy6iW6tX263ph7x31e2dxk
      Yk8Ydg945yMFRShgHO4jvrLJX/zkR/z85//AUi6DYniUq5d4/9e/ZPGl12kf7RDLFFGDARPL
      p5B47JCeASIJVeJ4YFPJxdjfOyBLyDAioigB44ZIPC4QhCGHu7uk4/Dp3T2u3LhBJh0lIQDW
      kL2ejSr2kHwbURSZjEeEossnH39Iee0agaahxFQ8rYOYXZkLwAtAkkQ2lgp4nk9UUVhcSGFY
      Dvl0HIBXLy6xX++TSqiMNIt6d8T64um27JG7TVZTfOe73yYajjF9CVmSWF5eQYklSAQTbt49
      4vs/fpOxJSA4abR+k8ziRTr7+1x66SJBIFCsriMJMUI3RRgGHB3sc/W1b1OJy6CGxJN5ot99
      jV/8/d8RrVznzVcvE4sIxJXnZ5SSFIXlUpaTlkMmDq42YKc5YeX6RcrlJCk1xPcnNBt9ULOE
      ocNipYwsKSiyiCjIyIHK0tICWCPG3QYjA7LFDJ7nUSgtEVNEUtVlBGzsiE9LN57bfOZ8huv5
      fLB1AgIUswlubtd5ZXORwcTE8XxyqRg7QcBercf6Yp7+2EDgdKchPJtw6IDhYEwmm0EQnm4L
      E/ge3W6XVLZATFX+9CHMOZP0+/2pKMGDiUEqriJL0hOPEQRBeEYCMGfO45mWADwNgiAIz2vD
      fWZwHAfP877+wDnPBcdxMIyzuxWce4LnzDQzJAAhrZMDOoMxpvmHJ2nY+oidvUNc/zGOjMf8
      lmlauKaG7c13mC8SzzIx+92H/z+pH2F0T31WeqtOGIaY/S6+c3oPnPst0APGnTqGmKCkBmzf
      vk1heY18DBpDm0ohQbPRory8xqB5gpwqINpDHDFJNLBIVars7u5Rqq5jmgahGsW1LUb9DkSz
      5OMCtZ7OYinPeDSiUinTbjUxTZulhSS6mmXYbbJQWcYetTDCKFk1YGAJrFfL0z415wpX1zD7
      HWL5BazRAFfXiBVK6O0GvbsfE80XaX30DuUb3wVmSAAMy2VhoUQiFqDEUliTAbf2TrAcGcsu
      sVTM0qrX8QMZcdDBNSecdE/YXCqSWIKLly5x9849oqkUhVKZXrOBIETAbFLb7WE7YNkTFvKL
      AAzaNeRsFUfXmGg2SjJDq1ZDUCQcs48nOOhBnKBanqVl+LkTKxSxRgMAfMvE6LawRwPMQY/A
      sai/82tCz3u4KsyMAJQqZT699SmZUpmFYgEBD4USQzMknc6SSqZwnBBZieG7OgPbJJ/LEk8m
      kYBup4kvSGQzKY72dkhk8vTrJ6RKVRYrJXoTh3S6QKmQBqC6cQXRt3A8iYQaJZ5OYwghjZND
      hhZcruYwJj7zDdKzZXS4y+RkH1GSiKQzKLEESiJJ+VvfY1I/JLW0ijUcIEUiwDPzA5xdnp8V
      KEDXbRKJ2FN/Igw89rbvES9UWVzIPIcxnT3G4zHpdPqF/65r6MjRGIL45PU1kUh85gc4r3Iw
      N4NOl2kJwNOQTCY/8wOcdXvtnG8mvu/jOM60h/FE5vkAc54rYRiSy+WmPYwn8pgNUsh7v/47
      3ru9D8Av//b/4e5Jl/d++f9y8+4Bx40HNladd3//6Ysb6Z+Ia4z48MMP6I70h4qnPRlgGBM0
      BwhDfN8HAnbvfsq9veOvjfWfTCaPvBb4Pr41YWj6z3wOc74e1/PoD8cEQUAYhmi6QRAE6IZJ
      dzDCDwL6wzGue7otfsQKFPouraGNO7rHd65vYLoejZMD7G6fdKyPaY75+O3fsPbyFW598B7N
      QYdi3EZIrxMO92g5Sf7r/+InPGVM3AvDGuqsXLtK494O6uoiB/UhS1EXOxZl++SIyxtVXFNn
      daWMqGbJqh7H9RZar0ll/SLeZECgxBh1miyuX2RQ36c2dHhpfYHGyKNSSJOIiHQ7QxLJgKZb
      pL69w+KFq+SS0WlPf2YYTXTSiTiCIBCGIX4QEIQhtuORTSfRdIOoqiJJp8/+RwTAHNY4rPcI
      XZuJFyIoKezOHrFiBXybTt8kJsPu/gGl5U0i/pjuxOUvf7jM//2//5ZhKAM/edHzfkpEFEXm
      9qe3CEKB4cICsZjA4uoGxqiO/blkMDUao9MdoBsa2zu7xIQIpeyERm+E526hFqtUxDG3bn1K
      oGRRQptGKJBxPfx0lMC30XQbXTfnAvACCYKAkaaTjMeIRVVk6fQWjygyvcEISZTw/QD7vl7y
      aD5ArMB/92/+NZIzRgxD3njz+4j4iIoKIbh+QL+ZIVlcQhUkBHxCISQiJfjxX/wQMXE2I/8i
      CZW7tz6lWFkjn45Ra4/J5grIcYWoEiWUc7heAAjYkw57eozN9UV2DJNUfoFMIkUqFpDpmxQW
      l+g2jpGSedZW1+noIavLJQ6aJqm0iBSVyQsqflRBVp4cjjvn2ZNKxNENCz8IMC0bzTBxPRdB
      EJEkiUwywWiikUycJsucez/AnOkyrXBo3w8QReEr81NmIhw6DMNz6+P4phAETxNA+GwRhKe7
      9udeAFzXnTvCpojjOFiWNe1hPJF5HNacmWZmBMDRBtz86Cb1zvAPCkALA5+DnbvsnzQYDsfP
      bXxzng16p0nn1of4rkPgewz2tgg8l0ntiN7WJ7iGTvuT9/AsE5iBLdADHM1m5cpVugf7xEWb
      k+aQjbUyu3vHLC6WabaHVIoJWl2dtcUc+ydNKisXSKAjJUosFuN8+uHHRDJFlgoxjpoj1pfL
      tDo90okI9fqAzesXON49oLqxQveoRSwVZzAyuPrS5dk50VNGTWXwLRPftpBjCSQlQuB5WKM+
      YRAwPt4nf/E6k9ohMEMrwAPCMGT77haWPuDuXoPL167R7fS4euUC48GAQWOXZk9naW3tNDZK
      +EyJSxcqZCMC3cGAQe2EWrtDeqHERLOoJKPs7W4xMW36/Q6+kCImhzjWBOvxxebmPAesYR8l
      mUJJpBAlCfF+2DOAIIoEvneqGN+3Ds3MgymSirK7tUVlZYPFYo6jxoCNjWW2796lWl1ka2uP
      hVyKYnWDhUKeWCxGRJSJJ6IIvR2OWx4LC3lEAiLmGKe6TKlYJJWMo9VG/H6rzZ//7Icc7R6S
      ySygZGKIwZhILIk6dwW8MFxDw+g0cMYjlEQSvVnD1SZEMzkcbUx6dZPh3hb5i9eAGfADvIhw
      aNvUsT1IJeNPXRdpVphWOHTgewii9JXXI5FInH8/gCAIiF+RFPEsiCVSPH1azGzxIs7/4xDF
      yNcfxAxsgRRFQVHmleemhWEYRKNnNxZq5pTgOXM+z8wIgDXp8+EHH3DSGjzxmNH46ez83W4X
      sGnU+196vfdE17sx6KI/RhXRhl3MuZXomTE6OaD+we/xLBPfdWjd+hDfcQiDgMbNt9G7Leof
      /h5bO73W534L9ABD1/BCiWxGpl4fIGDimiOaHY2N9RXq/SHpdBJHG1DvWawsZjg6aVOtFqk1
      BqSiIjZRrl5ep360S70u4LpxhIiC4BuYkx5bR31+8Npldg5qVMtlTnpDKvkkzfaIaj7C9s4R
      F9bWGXeOUVIlFHfIUb3NjTf+bK5DPCNSi8sErkvgeyhqlFg2Txj4DI+OHhbFEiWZ4cEOMEMr
      QCK7wMvXNtjb2WI40Gg12/iCystrC3QHGtVLlzC1CZIoYBsDPr11F8OyGY1HLC5fIBaR0MdD
      vACS2QWuXbtMLJZh3LzHyAyxPJELqxV2t+5iuS7jfofy+mUmgy6Dxg4DS+HK1Yv0mk1G4zE7
      ezsYrsTFtcVpn5pzxbh2RHyhjBJPIggCgigShgGTxjGT+hHJ0iKZ5XXk6OkjZ2ZWACH02d7e
      Z+3SDbpH2yQqSxTScSISVBMQUySUpSUk3yKeWeCVlxa4t3dCsVQlGo2g2SqZfAxFgFKpjKJE
      qVZFtm/XuXa5iNm1aWoBL736LW5t7VNcXkeNS8SLJQQ1TamY5/DgiEtXLlPbF1jOFYkGBh3N
      ozAzV+H5E/gevZ07qKk0ajqL1mrgaBNWvv9T7MkIQRAY148oXr0BzIAf4PkScnr2hDOXAnpW
      mFY+wIPbeubzAYIgmEo8+pxTgiA40+Ho514APM870xfgvON53pmuCzQzSvCcOY/j3K8ADzD7
      bW4dHpPOVri0XkUQQG+fYCsRfLVEMRYwHGtk0ymO9rYYWQJXrl0h8oVHhM9oaCLJkEwmH756
      cnLC8vLyC5/TnK/G1TVaN98mli8iyDL2aED2wmWGe/eovP4DYIYEwHcCNq6/zOj4kPrRDocn
      PTYWMxCPcnfrI1YXF4jIIplEBEdM8MpLK/Qah2wdttjcqHJy3KSwtIRgOuwfbXPtpVc5Odgl
      s7iBbxpsffIBQqrCpfUl5vrw2SDwXMLAx/dcjNohsYUSaiaPmsk+PGaGtkAh+mSMbrk06w1U
      VeS0KbzAxWsvI+NiGCaIMo45YTgc0ukPcawxg7FBqVLFMcfYnki1ukxU8HBCaDWbAESjUYaD
      PvN652cH19CJl5ZwdY1ofgFBFDG7LZzJePYywmL5LEGtyYWLl1FCi3p7SKlUQJREQlEkVCsE
      IQiizObaMu2hwcrKKql8BVWwaY8sNjcvEDgBrjUmkGOsVJdJZ3PIkoitjYgV4swf/2eHRHkJ
      zzJYuHYDQZYxu22kaBQ5lsC9Hwpx7v0A8/Lo0+Usl0f/Qj6Abdvouj7N8TwXfN+f+wGmiGma
      ZzpJ6NyvAHOmyzeuUXbgu9SOT4jnioiuxsQKqS5VEIWQVqNGLJlFUiIkY4/vJRC4JmagkFBn
      Rr2Y8w3mkbvUMTr8/t1PCIUAQbRZK2ToGSIZe5eDscqlYo/f74346RuvIXkaFirJqIIQeETi
      cYa77/NJcJHLcYNMqUomcTaabujtNlZcYdA1KGTj5LJPbtpgDFv0LQnXNlFkgeXqMluffsBI
      c1i/9iqlzBeDl0fDAalMDlGAcHxCnWWqZ3Pbe+4ZTXQsx2UhlyYMQnrDMZIkEYYhrueRSsSZ
      6Aa5TAp4ghWo32mwdPEaRneb9ijGjZcS1G+2ufrGf0nBOcLf7vPL3/yKvKDz3m6P165fRHS6
      WG6ShcU0QWTIP/zml4ilDf77/+ZnL/QEPInAs3j73dv89Ic/pnGyT/1gh94k4NKFEsf1Jtlc
      hf3tbb79wx+zkCnS/OSXrL32I7RuDYBQVChkFBq1IxRhiUG7Tb/dJFDTLFdyeNaIf3rrQ773
      xivcOrjJsJzjpYtrU5717KGb1sMbXpYlJOk0Mf5Bwwzf90/zlJ9UFkUUFb79/Z/w3W9f49f/
      JPKTH/4IgPQrr/KbX/0nNterrK1t4I6OmLQMLqxVubJS4lZ/gcnBXX6yusknTRO1sEwun/zy
      108RmZevb1KrtfAch3imSD4DY9Mil0vgOiLZZIRuf0gShXRllX6rSeR+SRNRlMiWlsjaI06O
      D3HckIXFdSQcHM/FGE8o51S6Y5d0NkPgztO8poEaUQiCENNyUGQJWRKxHBfCEFEUEUWRqBpB
      N07rlc6MEhx4HqEk4TsuiCAgIgCTfo33P93m5dfeJCrYxFNZpNADWcF3XQRRQJEVXM9DkWXC
      wGM01ojG4siiCIHNra1Drl29gGnaxOJxtMmEZDpLRJ4hP+MTeNFKcBAEOK6HHwQosnz/rwQh
      D/9tux7RiIIoisLMCMCc6fCNswKdNzzPm/sBpsg3pk3qeeWsJ2Scd3zfP9Pnf75JnTPTzIwA
      6K0WnVGX7YP6w4DNnZ1tjo+Pv3Bc4Ln0v9QHYDzu0G222T2sP3xtMh7iP9hZ2T2OW6dhJL1e
      DwBPb/Lr377HzVvbjIcjAsA1DJr335/zfAh8n37tmCAI8F2XSa/DqN1E63XQel3CIGDYrOPa
      p1agc78FekAYurx/8x5//ubrvP/2OwSROJmEgmuMuHVLZ6mU5Of/+bdcf/lV2v0e19Yq/Op3
      H/BnP/srEth8/Mkeb/70Td7//Vv4UoyFfBxl0KPTqpEsrtCq7dNrRxm2W1y+8TqleIgoyogC
      NDsdMuMuR40+6YU0b/3DzylffhnVMsgU0mzt1PnJP/szUnPv+Z+MrWuo8QQAkqKg3i+PYhs6
      YRjgmAbK50o1ztAZl/nWjSscHJ4QhJ9VDZDUJNFQp9MdsbF5ASUSIx2LMJ7obKyvYNsWiXiE
      l1+6zPHxCQuLa0Rw0V0Lz/OQBQEvDFm9eA3sHlGc0+AvQaBSKeEFLr5v43oBkqxAGFBe3mCp
      lEXwSlQWIjSPjxlMLFLqWfKbfPMIw5Ag8LG0MbKqIkdUPMcmls7g2hau5eB7Ho5h8CBu/dyb
      QR+EQ39+mg8aJHw5RjEMw4cdxj//90mMe012D+tsXLtBNvbgWRIS8uh3f/n7P//7D14/y1GT
      fyzTCIcOwxDPtpEUBUEUPzvnXyKZTJ5/P8A8H2C6zPMBpszpsjj3A0yLs35fnfsVYM50Oeue
      4EfMoGEYYpkGjuvhPgjoCkMsyyIMQ2zLIrgvM2Hg4/nfjKdrGPh4ng9hiOs+YUv0FatFGAYP
      5/2ABxGGc6bLaajzaeaf7weYtvuwS7xhOXh+gOP62I5HEIRopo3r+cBjrEDW4JD/8PObvPzq
      dU72dviXf/UvwRvzP/9P/wv/5n/4t/yf/9v/yn/7b/9HYpKHrB3z27rCxVyEpcUiXgDxqIJm
      WMRjMUzDIBpPopyBoDCtWeNme8R3VrL84pMmP/vxtxE4VVkd20EQRSQh5KDWZHV5GUkIcb0A
      IXDwxCihOcIWo6SiCogSkhBydHxIJpknnksTui5qNIrn2CDKiAT4iEQj8+40z5sgCPndpwds
      LhU4aPQZahY/urGB7Xp8cK9GTFWwHZcgDFkuZWn1J3zrYhV4jABEkkVKaYnecPKF11dXlvn0
      w49YXFuhc3yH//jX/543/9k/h2SZu3cOePutf0TzI1wsJcA3CMs3uPkP/5Hl1/6cf/WzH7yY
      M/GVyCRUkaOeSbWY5N7WNllChhGwzAnmRCGTS2BqQ272RhSTAb+/uc1333yDVKpCQgDMPu9t
      94lGVKKhwdgJCJ2QILT41S9/yaXXfoDRbKCkUnijOpHSZb59fWPaEz/3SJLI9fUyrucTVRVe
      ry4wMW2SMRXH9UjFVWKpGPeOu1TyKVzXZ6SflkV55NHsmRM8SWE0GmEOW7zz8V1AYGF5jV6j
      yXK1Qrfd5trLLyEgoCoyqhqhUFnhwkoFWRIxdINJv8nChW+RkM+GBUaQJJYKKUaWQCyiENgT
      7h02kCNJrly7zNrqOqm4Shi4CJKM7YVsri3hByCJp3XmRUliZf0ixXyKMPRP35NldMNg9eJl
      JN9lef0i5UKG8uIi49GTu9HMeXa4ns87t4/48F4Nx/N5584RgiDQGWpIkngqGBGFbDJKLhVH
      EAUs5/S+fOZKcPPwHh9vHfG9P/sLMur0tz5zpsu0lOD2YEI2GSOiPNnXKwjC+fcDzJkuZ90K
      dO79APP+ANPFMIwz7Yh8KACqqqKqZ6OCw7Nk7gmeLkEQfKGS9lnjUSXYnvDzv/0b3v7oLiHg
      GiP+8ddv8eAZ6hkDdmqdR77I1MbY/lneTYWMBz0mhonj/OEC4dom7U4PP3iaOYY4jovv2LhP
      dfycZ8XEsBmMjYf+qVMfgMdYtxhMDPwgwLDch/6bRzQEz5kgJcs0tm/jvHqV5v4dDnZ2ab50
      jd1P3qdSyvPrm7v0X3qJTFTCmAwpFRZot/qkywmOT7qUqhe5fuFsdT/U+y1qfZPSQkhtv0d5
      ZZmEAiPDJZNUGY3GpHMFjNEAMZpEcA08UUV0dOKFMvvbW0RTC+gJk7iq4nsepjYGJU4iIjDQ
      bbKpBKZpksmkaTTq2KZJuZhDiGax9RHJbB7PGOOEMnElRHcFFnJnM07mm8xAM4mqCpIo0uiN
      CUPIJqN0RwayJNEb6axVTutCPVZFvvPuL0htfIsIIZ9+/CkSPh/f3sYZ9BEEgcWNqzRPdtHl
      gHFvxEdKkysJFduvk7vwI/Y//ODMCcBYt1hZXiYZDTjZb9Co1TAHNdpDj9WLa6RjMuMTC1Mz
      kCJDAr3LYdfl+loFtVhmeWWF7d0jPM8iu1Ci12zg2j6hGGBrfdo9i9VLqyRiWTKZNIPWMUp2
      BXcyZDLWsEOJwVjH921M2yMeGhhSjkIuPS8o/QxJRCNMIgrRiMzEsLBsD4TT15Ox0/8M67Mc
      5UcEQFZT/Ff/6l/j6n1M1+fKd/+Cf7FaZmvvhH6QZ2FpjWoig1+KkRAtrEiebnPAaj6OH/FQ
      sgmS1y6+0Ek/DaVigY9vf0K+UqG8uAS46IKNkpJIJtIslTO020PSqSy+O6FnRVnIxVGiUURg
      MBoQAtGoysHOPaKpLNq4QzxfJp9fQI4HJBJZVhfLAFRWL4FrYPsRotEYhVwObTCgXe+iuQKL
      i3kmXZMAkKZ4Xs4bhu2QTUYxbRdBECjmEmiGw8S0KaTj6KZDe6idlkphBoLhnp8S7DMem6TT
      T6/ghYHH7r0tIpkyq4sLz2FMZ49phUObtouqSIjik31RiUTi/PsB5lag6fKNyQc4ryiKgqLM
      A9KmhWVZxGKxrz9wSpx7ATiPaYbfNM7yNTj3AvAAz7IIIhFsXSeZSn2l5cUxNUIlgWvpiJJI
      PBan1zymq3lsXlhHFp/86dA1sIgTmy86U8HRJujdJtnVTcIwYHiwS6JYIQh8HG2CEoujd5ok
      SqdWypkRALPfp+0bKEqB0eiYZFShObS4vFbh3vY+S2vrdE4OKK5sEhNDtj69SWKhiuDpbKxv
      MNRtSnGRneMmF5YWcCwbbdjFEuPERI9kMsbhSY/LFYl3911uXFkje0Z6I8wSnmMhCCL2eIiS
      SBJfKDE43AVAiijEcgVi+QV8xwZmqDAWeOzsnpDJJJloExqtHqrnsHVwQGU5S+2gRrPVRzct
      5EgMx5iQSH1m4TFGPXZrA2RXY6wbnBwf0xvZeNoQ07EZD/oM63fY69gUF6vUDvanONfZRRAE
      BElGzeSQlAh6u4ESjyOIIvZkjCjJ2OMhyfISMEMrgBxN8uYPvseg0SSVTKEoKhHAdDW27twj
      mdkgkVBPXeWjPhsvf4fJaEA8HgegtLxBuVTCHHW5tb1FIlukmMog4jLSxhCRSGQWiMVTHB3f
      ZWlpZboTnlHG9WMC30MQBQRRwjF01GQaSVHwHYmQEDWVeXj8uTeDfh36sM32UZfrL10jIv0R
      yppvc9QYslItc4Z1vakxrXBo1zSQ1SjCV/gBZiIf4JxP78wzGAzI5Z7cj22aiKJ4/v0AruvO
      HWFTxHEcTNOc9jCeyAwpwXPmPMrMCIBrjPn4o4/oDHV83+fBzsj3fR6/SQo43L7D3Z3DR+oB
      fZl+64Tb9/a/9rjP8/kxfOFX59lrfxL2ZITWOC15HwYBnVsfYg16aM0T2p+8T+C6tG6+jT0e
      AjNkBbLHBtUrl2nvH+LoCZKqQm1gkYnJpNMJTk7qLK5uMm4d4ippNldLEEmRk22OjjosVlLY
      lkO73UBNFYkGGnoQZa1a5rjeZGX9EsPRiFwywtD0aR8ekSpXiQYafUukmFGZ6A6SbzJ0ZRai
      IpFUnOPjNhtrK9Trh0TjWXbu3eb6K6/RazVYuXiVVHRmLtEzIfR97MmI5OIKRrdFNJtndLRL
      ZnUTUVbo3PqARHkJOXZq3Zuhs+vx0dtvsbR+HVMfEboihu4ihDKia7O4tkGvuYcoLeAZfaBE
      r3mEkswTEwboWshgMEZKFfGsLnd2asTyBZaXyly+dJGtu3sIyRjplTTNnks0UWHcqbHfaSFH
      c9hmhPXlVepdH1wd0xOwQpdJr8WhKJMpVXDGYzY2L5KPi5w4NrphzwXgDySazWN0msBpNUAp
      Ej01h2pjYvkFjE4Tvd3A6LSAGRIAJZ7mez/4EeNuHymWRQpdFD0kl80Sl2WiUZUgu8C927fx
      1CxXEFi/dJ18PsuwXePgqEGlWiWWTOCrAqx6WEICUYBOq4EYS7CUS3Bnt0mhusjuR9usXdsk
      rkpMXIVSOUc8HmXc+pi+I/Odyxv4gksikyeXy5BKJnAE0AYtuloCVZbPREW9bxqDvS0mtUMA
      YvkFhvv3SC6totWPCX2f/OWX6G/fJrN+CZgBP8AfEg4dBj6N2gmJXJlMMvr1H3jS94QejgPq
      lzu+hAGtRh05kaWQObuJ4s+SaYVDe7aFFInwmPK3D/lCPsBZ7+b3xzI3g04XTRGaLS8AABto
      SURBVNPObFWIXC73mR8gDMNzeaMIgjDPB5gikiSd6fP/UABkWUaWZ0YlmPOCsG2bRCIx7WE8
      kUfueFtv89d//Xck8yX+xV/9jI9/81te+umPee9v/gOjEJaufJfXLy9PY6x/EmHgcu/OHWL5
      MulonGwu9VSfcywTSY0x7tQ4rA+4fP0q8cjXPShCBoMRYmAjxlJE1TjKPPP9hWBaDiNNp5jP
      IAoC3cEYVY0giQLB/RpNY90kETsNVX/kSoaBx+KF65SlFoddC2M8IQD0yQRHVXEGNf6P/+st
      3vjWVf7zf/p7vvWd7xAvrTCpHdDtD4mkF/irv/zxmQsM69Zr5Kqb5JPw3u8+JFtdpZQUOeka
      LBaTNOpNFtcv0j7YQc1VUP0JWhijEBHILK/QarXJFso4xpgwiGOMJ/RbdYJYlkpG4ag5oVot
      0OuOuHL5ArWjPYikWcnZ9KUotVqdpZV19M4JhhBnIRow8lSubs6jRp8l/bFGMh5FEISHzTHS
      iowoCkx0i3wmiSCAJJ4+kR6rIrdrh+w2DRSnS8u0iQCSHGV5qUS73aK4fg29c0QuE8NNLfHB
      3/41hWoFT05hacMXOd+nRhDAD0LCEBYW11DxuH3rFsawT3NocvnqJuNel2S+iuRqDAYj9u/t
      MJloBAKsbV4CfcBhrYGm6zRbbeR4Hsmd8OmntzHGfeqtHkvLpze0JEkEvoeta+iaxvLG6feH
      sQyCZ+K4DvpkjD/l83LeEAQBx3HRjdNG2JIk0htOkKXTGz4MTytGRNVTveQRM2gYeLSbLWKZ
      PHJg4woRMsk42qjPSHdYKOTwQwEFj8FYJ5XN4RgaqUyGcb+DFEuTiv/xJsTnRRh47Ny9QzRf
      Jh2LAz6uMaTWNaguL5FPxxhPDCRZJfAsBp0mZhilUkiTLBQY1g+p93Q216vs7R+SLxU5unuP
      yuZVshGXo+aI6uoyC9k0ggCj0RgZF90KiERV1HgcW9e4+c4/YalFXtssMrAkLl9cO9fxKC86
      HNq0HUYTg6iqoEZOuxWpiozr+RiWTbmQxQ8CYmpkNsKhnx8hnuf/QYaDMAyYjMfIapx4NPIc
      x3Z2mFY+QBAEX9t7+Qvl0c8rz7ORnSAI+P4ftolJJE+V7z/0c99UwjCc2lyf5rqfewHwPO9c
      +je+Kbiui23b0x7GEznP2885c76Wc78CPEBv1bjV1XhtJcOvPm3wlz947dGDfIfj9oCV+wVu
      ARxTxxMiBNYYR4yRT8cfvtdu1lAjSaKZFKo0f5acBUZHe+jNGoVrNxAlic6nH6JmcoiyjN5u
      kKquoTdrpFdPu3fOjACEoYQiBRx3dMq5ODvbO6SAsRwwHPRw7Qi5QhZt2KHRaFNJhbx1c5fv
      /+B14vESUUJCs8/v7twmGk+SwKA9sVkplUmHJn/zj7/g+nd/wuh4HzmVJxjXiFaucOPy6rSn
      PlMky0sEroMcjWENehSu3UBvNYjmCuidJr5js/idHzDc3wZmbAtUysbo6D4RScDWBmzvHxOK
      KtdvXGVt+QLxiIggCIiCgGY6rFfzGJZH+DBnLKR64QqFdAzX85BlmTAMGI3GrF64iKtPWFy9
      RCmXoFQu0+u2pzrfWaT1yXs4uoarTRBEkd7dTwg8B+Nz16L54e+Ro6f1Ss+9GfRBOPQj0wxD
      ghDEL5U5DMMAEBHu3/ZPNKOFIQEg3n8/CIIvlOJ+8HtfVZ57FnjR4dDhfaufPewTSaURZRkE
      8dQDRgiCSBgECKJIMpk8/2bQBzxyIwvCYxtTCMKDV4Wv7tzypc9LkvSlt89YLMiMIIgiAhAr
      FL/0xmfXQ/jctTr3AiDL8sw/haeJLMtEImfX6XfuBUAUxbkATBFRFM90mP0M3RkhruvguN5j
      y5F85SfD5+dNnvNsCYOA4L7jMwxDPNsi8DzCwMezzNPX7v+FGVgBHmAOO9zaq5PJFdhYXUIS
      IAhshhokVJAUFZEQPwwJPBdJidA4OWFxeQVd6xCGGWKKiydFkfGRIyqB5xAKEpIQ4gWgRiJn
      Lgx81pjUj9E7TRZf+x6eZdK98/H9YrkiUkRFiSfRWnVSlSowQwLQHWlc3Fhle/+YbWvCWk6g
      GSkjDD3e/egXRCpXyAgGpdV1PnrrVySXryEZAxK54kNlV58M6Y8tJoaJFFWw+yNQ46jBiLGY
      50evvwTzpqdTJb28hmNoAMjRGNFcASWeoPXJ+8iRKIHvs/y9n9C9+zEwQ1ugciHL1vYOQQBS
      6PDJ1iGSEBK4OvHCCsmoTHFpjVJaJltZJxWNk8/Ecf0AIfC5e+tjBoZLJBLBcyxkWWFxZYPl
      Uo6FUgVTGzNvCj99+rt36d75mHHtiNHRHt2tT7EGPZLlKkHgocTiHP7m50QzpxGq594P8FW0
      jnZQCuvkEzOzEL5wphUObfQ7qKkMkvJkC9Q8H2DOc2daAvA0fCEfwLZtdF2f5nieC0EQzAvO
      ThHDMM50OPpDAVBVFVU9f03d5o2yp0sQBGe2MBY8Rgn27Al////9Db95+yYBsLu9Tb99RK0z
      mcLwnh1h4NPrdLCcP10YXNcFAmzbfeT1J+0ofdfFf8xbvufizxeoZ4Zm2gwnJp4fEIQhI93C
      cX0832esW/hBwEizHpZIeUT785wJA81H0vZxvvct7nzyAZYQ40dvfofewGM8HHJycIADCKLK
      9QtlPtk64eXLi+yemHzn+zeIfkUf3WnRrR/SNQWKsoIQJoCA0HcZaRb5bBrDtDBsi4VMkv7Y
      pJBNMhhqZHNpTN1AFAUsN6SQz1Cv11lbW+Bgt8PG5VXwPQLf5s7OETeuXaLbH1HIZ9ANE0kS
      MCyfiDOkS4LVYh5t1CcSz6DgcHR4QOXCK6TO3+I7HUIYaAZqREaWRFzPZzAxEAWBVFylM9AQ
      BAHTOX14Pdb8IUoyamhhe/fzXj2XQbsOsTS1oxNMJ4bvd8lGdW7dGnB4dwsh3CS68kPUM+oJ
      ypeX6N3bZmIE9NsmAhPCwEEJfMbDIW40jmBpBJMuh12btupSaw65sLmC7SeQnTYGKfK5DJN+
      i5uDJoh5jg6PEAVwrNMTu7/1CXu1NiuLy1jxHLlgyJ17+1y59hKBYrF/cMSgeYitpKlkYg+j
      Sec8G+LRCFFTIRqREQQB2/FQZZmxYWE7Hqm4imbaZJKn4dCPCICspsjGIZrfJCnBtRuvk0ur
      tPoGnUaT1fULSEKEICwRlcHSNRQ1xer6IvGF7Jn1hJr6BNv1UcMIk8ExgRpnpVIgG4G2Dkur
      i3SPDknEEkidE+KpPCXipNJpKskyZt9l0tLwQyhUVlhczHJ4OMHXTohVr+HVhhgWLJazLHgK
      uWwKtVJleDCkUi4gygrDbpdysYKaSKFG4oihw8TyWTqj5+ybiGE7ZBJRTNvF8Xwcz0eRRbLJ
      GBPTfqRSxLk3gz5fJdjj8KDBytry/En+BKZVHt20XVRF+spAyEQiMTv5AM8HmbX1eWnDs0hM
      fbqK1OdeABRFOdPluc87lmURi8WmPYwncu4FYJ6ZNX3O8jWYmWA4z9a5e+c2g4n1lce5lo7t
      BfT7fXzPxbKdFzTCOc8CR5swONghvO/99ywTezzCGg0YHu0T+D79/W2C4LRa3blfAR5g9oak
      Fhc5OdhD3lhFAITQo1ZrsXZxk9r+LuXVi4iORqs94Xj/HpevruOHCUbDHuvrq+jjIUIkhmMa
      eK5PoZDkpDlifalEfzgkEhHpax4X16rTnu7M4tkWCAL2eIiaydHf30YURWKFEp5l0tu+TaxQ
      ZHi4B8yQAIDP3r0tysUVasdHIIAoQLkQ5ZN3P2bg6lhigmtrCwx3brJYrbJ/MOTiukCnfojr
      B3iCSCXWw44t42gNRuMB1azKrTt7REt51HaLvqPAXACmhiCKp36sTA6tVcfothAkiWh+ATWV
      xjUN4vki9nAAzJAAyNEkr772OmlF4dMPThj7Kptri6TSESorUbxajWw6iSCpRKQo1ZUlDPsQ
      GYinMiQTSTL5HIqnkUtl6LsThMBiuz5kbXmFeKmAEZp0uua0pzrTjOtHBL6PIIpEkimW3/gx
      RrfNpHaEIIqkllZofPg2hcvXgRnwA8yZLtMKh3ZNA1mNInyFH+AL4dBzOZjzvJjGvfWg8tvX
      /fZDAXAcB8Mwnu+opoDneTNTi/8sYpomjnN2LWnzfIA5z51phEI8LY9skByjx7//d/+Ov/vF
      W4T4vPvOu9z+4G26uvu4z39jcA0D2/cYDIZfuyLY+gjT8RmORmjaaYWB1sk+n965h/OY4H3f
      9x/WGgodDe3sPvDOPdZowLhxQhgEeLbF8GgPrd3AHPYZHh/gOzajk0M857RpxyNWoMC3iWcX
      MYdtPEK2Pvwt0ZXXUSO38fI5+v0BW3t7+I5EJJ7icjXG+9sdrq/k6Acx/vz73z6TgWH2eMSJ
      PiKbW6bRqKNKIa2hw5WNClvb+yytrdM5PqSyfolkJMLtWx+RXdwgsIckk0ksX+RCKcHeUYP1
      ahHbMBj3O9hSgpQqkIhF2D9uc6Ua54PdY65fWmUhc3YbRJ9X5GgM1zTwbAslFie9tIo56OEa
      OqnKEqEfkFgoY903gz5WRe40T/jOD36CAuQWN1CsDo1mg5OjI3qDPvnVNeKRLFHP5OM7W5zU
      Dmm3Btx47dUzefOfEtDrj4lEFAzDYKTZ5FSJ3ZM6Fy4t0ql30QwL3bQQRInQc5E/F0OkDzts
      nwyICzaaYdBotrB8hUhgYzsO49EIZ3jMQddmeeMinUZtinOdXT5fGQ7AHPWJZnPI0djpCuA6
      WJMhieJpE5RHzKCBZzPSHHLZFBDS6w2IyiETw2I4NlmsLBBKEr4dIOBhGyNGjkQpmySVy6Oc
      sWywBzqAPR7jxaKMO31EWUCRI8iEmOaQu7t7LC6/hKt1KK5eICnY+EoSfTwkoirkc/mH5jxb
      H7K1e0gqVySTSCDi0u72yWfitNsdCuVljut1lqprLBWz057+1HnR4dBap4lnmkRSaZRoDN91
      iKYy6N02rm0SiSWwtTGxXIHCYvX8l0X5OiXY0sc0u2OWV6rIf4zwBi7doUEhn5nXhHsM08oH
      8D0XUZK/MhAvkUicfwFwXXduBZoi0xKApyEej5//hJh5PsB0MU3zTOcDzEw49Jw5j2NmBMCe
      9Hnv/fc4bvWfeEzou3T7AwhD6oc73L53QP++uewhrk5nNKHbefL3fOU4zCHvv/Meu8fNpzq+
      2+0SnO9d6jNFazfo7tzF91wC32d4fEDgeYwbNQZH+ziGRuferc8qSE95vC8MZ2Kx/tJLNHf2
      Ub0R9b7NYqVAMRuj1zc5qddYW1+nNxiSjStMPJkrF5a5e/smR4cqG2tL7O2fcGmtREcLETUD
      W++ih3FSkkO9o3H16hr37u1Sqm5g9WvImTKKM8ERI4y6HdYuX0fyTaKxDMZkTKdu0xzarJTT
      7B/WWb5wke7JPmKiQEo0GdoKQmgTj4hs7R6ytnmRfu2YeDZPt9Nh88o1EurMXMKnIpJMY41H
      +I6DHI0iyjKB72ON+oT3ez8o8STWaAjM0AoAHh/89teIyRytvsZKwmWkm7x7cxfP1TEtjf2j
      B7Z7gTAMCcMQNZFhZTFDq95BHzY5bI/vH2Nz+9Yug34PzQpYL6TZrtW5fP0Sg/oud7br9Htd
      hhObpWIa13GYaAYg3PcvBAz6fZone7T6YzY212gfnBCvrOIaIwb9Prt72/hByOFRjavXrnBy
      tItLjF5tF90wGE3modePQ1IUAt9DFCWk+/pfdmXjYWCcJCv47qm7fmYeH2o6z49/+hdM+gME
      NcNJ32JzJcl4OCafzdAa6CxWSiiygqzGyUYC7h3UWCwViSkSEMH2HMqlIsgRhHiMuCqiBzGK
      xRxRUaBq9vn53/0Dl6+/weULClI6SyGVQJIU1KhKIh5DVUT0yQmZyjKJUGFRilNcKBKPxVha
      KfH2W78hXl5nPZ9mI75AuZAlHZO5c/ce65cuI/ohSpjizl6NZPz8xW79qVjjIb7n4RoGgeeh
      ddo4ho6kRIhlcsSyeUa1IzLV0wbm594M+lU4lgmySkR+Nguh79qMJgaZbBbpj/AphIHPaDQi
      mkgTjZyPZ9O08gEeJMV8lR9gJvoDBMG8wd00GQ6HZLNn0yMuy/L59wN4njd3hE0R13WxbXva
      w3giM6QEz5nzKOd+BXhA6NvcubOFFM9xeWMFQTh9TbMglXi8MvnAi2maY8IwhiJ6+KJybvbn
      5xGtWcO3TDLrFwk8j+YHb5GoVEkvr9H66B2SlRUmtUNi+SIwQwLQbjQoLS0zHOm0Wg3ycYGx
      lCTQA+r7d4kVlgi1HkIih95rEs8tsH/3Dtde/z5R0SIMIwQY2B7cOzkiV6kyadUIImly8ZCJ
      F+HKhdUzWx17VogXy4wOdgFwTR3PNolmcowOdwmDkER5iTDwiaRP9ZKZ2QJFZBHTExEDm+Fw
      hD5oozkuxnhAf2yxv3+IJ6iU0xIjzeC4PmD1wgal7GdJLY5t0m63Ka9uMh60iGfKZOMyCALj
      8WiubJ8BREl+2KpZUiKUX32D/vYtJrVDJrUDXEPDnoyIJE8D9GZmBciWV9D2twmVFNWcSL0z
      RPUbCMkVFjyddHGJZDSCEpXJ57LkSlWwBnRGOtlojK27dykur7JxYYGTg32qqxdRAIEAUxuQ
      z0fnT/8zwOhwB6vfpefYxEtLaI1jsptXieUWsEcD5GiM9PL6Q/PouTeDflU+wIOpn+Xird90
      phUO/TTXdib6A4iiiCRJ0x7GzHLWz/+5FwBZlpHlcz/NM4ssy2e63M7MKMFz5jyOmXk06sM2
      d3ePKVU3WKk8PjZlMBySewq3fbPVolJOc3yksbJafPh6q9WiVCo9dt+p95oE6QqpLyWnjftN
      pFSFxDxp7Znj6BqN939HrFAi8BxcwyC9vMZg7x75i1eBGRIAz/PwA0inBY4OewjouOaITk9j
      ZXWFxnBMNpPEHrU57rmslBPs7NfZuLBMozkmEfFxpCSvXNukdbxH7SQkJI0QkRF9A2PcY6cx
      5o3Q5vb2IevLK9RGGku5GAfHbTarefZ2T1hdXmVQ30NMV0iEE+rtPjfeqEz79JxLAtch8D0C
      z8Hsd4nliwT3w6Af/J2ZLVAkluTihVWODvYZ9Ho02x0ENckrFyqMNJsL169hGzoRNYqt99jZ
      P0aUFCzbYu3CJTLJGNqgjxdAemGR11+/QSKWwejuYPgRnECgWspTPz5GjKg45oTVy9fRhgPc
      SYuRI7O8usy430e3bJqNE2xPolopTPvUnFscQyO5uIyjTVi4egPPMpg0TshvXsHodYAZMIM+
      wHMMjo6bVFZWGbVqSIks6biKIoLtQSQexTEMBN+mNTRZKmY4qXcoL5aJKCrmuMvYEalWFrAt
      i2hUwTAstm5tce21b+GMu/SNgJVShoPjBpVKGSWWwBl3GeoOuWyaVrtLdXmZXrOOmsqiBBYj
      02dxcZFnFJF95phWODScFska7N0jvlDCd53T6nCLy/R3t8htXkFRo+c/HHrOdJmmAHwdX+gP
      cF7xfZ8geLSg7ZwXg+/7uO7ZLaw8EwIwzweYHmddAM7pznPOnKfj3K8ADzC6Te71dF5ezvDW
      7SY//u7Ljx7k///tndtv20YWhz9eRFLUhZIsyfIldnxtvJukrbeLPrR5SRHsYvvSP7ZFuw8b
      FL0BTVC4bRZI12mTOI4tRdZdJsXrzD7ITm9pscCilWvr49uAGPLM4JCcOTy/E3LYHjBfLT9v
      CkcusWIgw2Mi1aKQ/V7lrHXUwNDTmPkcpjZ9lpw1opFL44vPSKUzSJGQRBF2pcbx4RNKL43n
      /8I4gIhByICDZ33yGZ3Hjx6TBYZaQqfdIo4MijNF+u0G9XqTeUfl690Drl7fwkrPYIiExO/y
      +Tf3sewcGWVEvetyeX6BHCEf3bnL2rW/0H78ED1fQhu10EvL/GltcdKmX1h0y6a4vkXsuQwP
      9tBMCynGyfL9xw+AC/YJVM5ZNN0EU1fxhj2e7B8SSZ0r1zZZnLuMqUksO4OuSLpDj6ylMHB9
      ktNFtEyoLW9QyBhEscDJZYijkG63hzNTYtDpUl1YZSZnkXccOp32ZA2+4AS9Du37X6FZabLz
      S0Sei5kvYOQc7MoccAHiAKe/Q4s4RqoQRxJFBRmH+KHAzqTRNAWRAFIwGrloho1OjB8lWJaF
      pmooyJNDBSlIogA/kthpE1WBoethp9OoqgZIQt9DqAZZ25r0EEyUSapDJ1HIqH2EblqoqRQi
      CknZOYJBj3S5SjabPf9xgGmRvMlyluXRf5QPEAQBrutO8n5+E4QQ0zjABPF9H/VXilVPmnP/
      BpgyWf5wkWARB/SGASkCWt0ezaMOs0vrFI2EVK6E2+9QrlSflwPy+h2k5ZAxz27Wz5Qpv8TP
      HCActdm5d0hFOSR75SYHO/d45dVt/NZDPrz7JUa2wmq7QZKuMJdX+de777F24x+Mmk9Y31gj
      1jJIf0i1WnnR9SbGcaOBZ6l0OyGbq4sowO7ufzCtNMtLS8/PE3FE99hjpuA8b+v3nxG40A8i
      NlbG25rDfhc7V0RTgaDFXjfNci1Dq9WiXC4Tu3U+uruHUyqwfqlGrlggcV1ansdc5WyNzXli
      2KzjdduUllZBUegf7o8L5eUL+P0udqmC122TO6kS+cI4gJQSIcC0LCzLwjRSmHObBLc/5bU3
      3mTn9gc8eLrD4iWHy0vzDJoHHDz8N/vtEEP00Q2Hv986W5MsRcjnX3zHrRuvc+fTzxBmhkIm
      Rej2+PrekMXZHO998CHXXt7mWbvFn1fmuf3xHW6+/Q5ZQna+fMCNW29y55NPiLU01XKGVKdF
      s75PrrbM4ZNvaTXSdBp1trZfp2ZLVC2FokC92cQbHLH3tIVTcfj4n+9Tu3Idc+RRqOS5v3vA
      W3+7Sc6cZsX8v5jZPF6nhaJp6IZJpjxOUNINEySIJKa6scWgMZbC/9nqxLDLaEGTeuhQzSrM
      zo49BUXhpa3rZC0VNIOVlUssVYvstz1MDXIzNeZqCxQVl83tv/6uRv9v6Lz26haPHu0h5In+
      P6BbWSwtoXnUY21jHcO0cWyT/uCY1ZVlAt8HLcXL166wt7dPdeEyy7USiRDEcYyuqsRCsrJ5
      lZLjsFCbGddKVhRqtVlM0yQWgiiM0FMGUgpql1ZZmC1SXVxheXGegpnQHviTHqBzgT/ooagq
      4fGQOAwIj4eY2Tyth7vEoY+iqhx99w36SZ7yhVkE/9BMKQWg/kTHRyKERFVVpBCgjJ3k13Yw
      +keH7D56yvrVbYq2fto5EuWFGkFCiB/1f5o6edp+HuVZfu9FsDzZ8QvcISnLRtXHpVKlEEgk
      iqKClKAoqKp6/uMAUybLH24X6LwRxzFJkkz6Ni4scRyfaXn0c+8AQoipA0yQsz7+/wWQww9Q
      Shic/gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 10 teams' width='192'>
      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
      uCOkFy6T/X+icNsWYkiKtgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
